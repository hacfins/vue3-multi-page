{
  "gutter": {"description": "grid spacing"},
  "justify": {"options": ["start", "end", "center", "space-around", "space-between"], "description": "horizontal alignment of flex layout"},
  "tag": {"description": "custom element tag"},
  "span": {"description": "number of column the grid spans"},
  "push": {"description": "number of columns that grid moves to the right"},
  "pull": {"description": "number of columns that grid moves to the left"},
  "xs": {"description": "<768px Responsive columns or column props object"},
  "sm": {"description": "≥768px Responsive columns or column props object"},
  "md": {"description": "≥992 Responsive columns or column props object"},
  "lg": {"description": "≥1200 Responsive columns or column props object"},
  "xl": {"description": "≥1920px Responsive columns or column props object"},
  "underline": {"type": "boolean", "description": "whether the component has underline, default: true"},
  "alignment": {"options": ["normal", "flex-start", "flex-end", "center", "start", "end", "self-start", "self-end", "baseline", "first baseline", "last baseline", "stretch", "safe", "unsafe"], "description": "Controls the alignment of items, default: center"},
  "prefix-cls": {"type": "string", "description": "Prefix for space-items"},
  "spacer": {"description": "replace blank space, type: string/number/VNode"},
  "wrap": {"type": "boolean", "description": "Auto wrapping, default: false"},
  "round": {"type": "boolean", "description": "determine whether it's a round button, default: false"},
  "circle": {"type": "boolean", "description": "determine whether it's a circle button, default: false"},
  "native-type": {"options": ["button", "submit", "reset"], "description": "same as native button's type"},
  "name": {"description": "native 'name' attribute"},
  "fill": {"description": "border and background color when button is active"},
  "true-label": {"description": "value of the checkbox if it's checked"},
  "false-label": {"description": "value of the checkbox if it's not checked"},
  "size": {"options": ["medium", "small", "mini"]},
  "maxlength": {"description": "maximum Input text length"},
  "minlength": {"description": "minimum Input text length"},
  "show-word-limit": {"type": "boolean", "description": "whether show word count，only works when type is 'text' or 'textarea', default: false"},
  "show-password": {"type": "boolean", "description": "whether to show toggleable password input, default: false"},
  "clearable": {"type": "boolean"},
  "rows": {"type": "number", "description": "number of rows of textarea, only works when type is 'textarea', default: 2"},
  "autosize": {"description": "whether textarea has an adaptive height, only works when type is 'textarea'. Can accept an object, e.g. { minRows: 2, maxRows: 6 }"},
  "autocomplete": {"options": ["one", "off"], "description": "same as autocomplete in native input"},
  "readonly": {"type": "boolean", "description": "same as readonly in native input, default: false"},
  "form": {"description": "same as 'form' in native input, default: false"},
  "validate-event": {"type": "boolean", "description": "whether to trigger form validation, default: true"},
  "fetch-suggestions": {"description": "a method to fetch input suggestions. When suggestions are ready, invoke callback(data:[]) to return them to Autocomplete"},
  "trigger-on-focus": {"description": "whether show suggestions when input focus"},
  "debounce": {"description": "debounce delay when typing, in millisecond"},
  "select-when-unmatched": {"type": "boolean", "description": "whether to emit a 'select' event on enter when there is no autocomplete match, default: false"},
  "hide-loading": {"type": "boolean", "description": "whether to hide the loading icon in remote search, default: false"},
  "popper-append-to-body": {"type": "boolean", "description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false, default: true"},
  "highlight-first-item": {"type": "boolean", "description": "whether to highlight first item in remote search suggestions by default, default: false"},
  "step-strictly": {"type": "boolean", "description": "whether input value can only be multiple of step, default: false"},
  "precision": {"type": "number", "description": "precision of input value"},
  "multiple": {"type": "boolean", "description": "whether multiple-select is activated, default: false"},
  "collapse-tags": {"type": "boolean", "description": "whether to collapse tags, default: false"},
  "multiple-limit": {"description": "maximum number of options user can select when multiple is true. No limit when set to 0"},
  "filterable": {"type": "boolean", "descript": "is filterable"},
  "allow-create": {"type": "boolean", "descript": "whether creating new items is allowed. To use this, filterable must be true, default: false"},
  "loading-text": {"description": "displayed text while loading data from server"},
  "no-match-text": {"description": "displayed text when no data matches the filtering query"},
  "no-data-text": {"description": "displayed text when there is no options"},
  "reserve-keyword": {"type": "boolean", "description": "when 'multiple' and 'filter' is true, whether to reserve current keyword after selecting an option, default: false"},
  "default-first-option": {"type": "boolean", "description": "select first matching option on enter key. Use with 'filterable' or 'remote', default: false"},
  "automatic-dropdown": {"type": "boolean", "description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused, default: false"},
  "show-all-levels": {"description": "whether to display all levels of the selected value in the input"},
  "before-filter": {"description": "hook function before filtering with the value to be filtered as its parameter. If false is returned or a Promise is returned and then is rejected, filtering will be aborted"},
  "active-text": {"description": "text displayed when in on state"},
  "inactive-text": {"description": "text displayed when in off state"},
  "active-value": {"description": "switch value when in on state, default: true"},
  "inactive-value": {"description": "switch value when in off state, default: false"},
  "active-color": {"description": "background color when in on state, default: #409EFF"},
  "inactive-color": {"description": "background color when in off state, default: #C0CCDA"},
  "controls-position": {"options": ["right"], "description": "position of the control buttons"},
  "show-input": {"type": "boolean", "description": "whether to display an input box, works when 'range' is false, default: false"},
  "show-input-controls": {"type": "boolean", "description": "whether to display control buttons when 'show-input' is true, default: true"},
  "input-size": {"options": ["large", "medium", "small", "mini"], "description": "size of the input box, default: small"},
  "show-stops": {"type": "boolean", "description": "whether to display breakpoints, default: false"},
  "show-tooltip": {"type": "boolean", "description": "whether to display tooltip value, default: true"},
  "range": {"type": "boolean", "description": "whether to select a range, default: false"},
  "tooltip-class": {"description": "custom class name for the tooltip"},
  "marks": {"description": "marks, type of key must be number and must in closed interval [min, max], each mark can custom style"},
  "start-placeholder": {"description": "placeholder for the start time in range mode"},
  "end-placeholder": {"description": "placeholder for the end time in range mode"},
  "is-range": {"type": "boolean", "description": "whether to pick a time range, default: false"},
  "arrow-control": {"type": "boolean", "description": "whether to pick time using arrow buttons, only works with <el-time-picker>"},
  "allow-drag": {"description": "this function will be executed before dragging a node. If false is returned, the node can not be dragged, type: function(node)"},
  "allow-drop": {"description": "this function will be executed before the dragging node is dropped. If false is returned, the dragging node can not be dropped at the target node, type: function(draggingNode, dropNode, type)"},
  "format": {"description": "format of the displayed value in the input box, default: YYYY-MM-DD HH:mm:ss"},
  "range-separator": {"description": "default: '-'"},
  "default-value": {"description": "optional default time of the picker, type: Date"},
  "disabled-hours": {"description": "To specify the array of hours that cannot be selected"},
  "disabled-minutes": {"description": "To specify the array of minutes that cannot be selected"},
  "disabled-seconds": {"description": "To specify the array of seconds that cannot be selected"},
  "start": {"type": "string", "description": "start time, default: 09:00"},
  "end": {"type": "string", "description": "end time, default: 18:00"},
  "min-time": {"type": "string", "description": "minimum time, any time before this time will be disabled"},
  "max-time": {"type": "string", "description": "maximum time, any time after this time will be disabled"},
  "action": {"description": "required, upload URL"},
  "headers": {"description": "request headers"},
  "with-credentials": {"type": "boolean", "description": "whether cookies are sent, default: false"},
  "show-file-list": {"type": "boolean", "description": "whether to show the uploaded file list, default: true"},
  "drag": {"type": "boolean", "description": "whether to activate drag and drop mode, default: false"},
  "accept": {"description": "accepted file types, will not work when thumbnail-mode is true"},
  "on-preview": {"description": "hook function when clicking the uploaded files, type: function(file)"},
  "on-remove": {"description": "hook function when files are removed, type: function(file, fileList)"},
  "on-success": {"description": "hook function when uploaded successfully, type: function(response, file, fileList)"},
  "on-error": {"description": "hook function when some errors occurs, type: function(err, file, fileList)"},
  "on-progress": {"description": "hook function when some progress occurs, type: function(event, file, fileList)"},
  "on-change": {"description": "hook function when select file or upload file success or upload file fail, type: function(file, fileList)"},
  "on-exceed": {"description": "hook function when limit is exceeded"},
  "before-upload": {"description": "hook function before uploading with the file to be uploaded as its parameter. If false is returned or a Promise is returned and then is rejected, uploading will be aborted, type: function(file)"},
  "before-remove": {"description": "hook function before removing a file with the file and file list as its parameters. If false is returned or a Promise is returned and then is rejected, removing will be aborted. type: function(file, fileList)"},
  "thumbnail-mode": {"type": "boolean", "description": "whether thumbnail is displayed, default: false"},
  "file-list": {"description": "default uploaded files, e.g. [{name: '*.jpeg', url: '*'}]"},
  "list-type": {"options": ["text", "picture", "picture-card"],"description": "type of fileList, default: 'text'"},
  "http-request": {"description": "override default xhr behavior, allowing you to implement your own upload-file's request"},
  "allow-half": {"type": "boolean", "description": "whether picking half start is allowed, defaults: false"},
  "low-threshold": {"description": "hreshold value between low and medium level. The value itself will be included in low level, default: 2"},
  "high-threshold": {"description": "threshold value between medium and high level. The value itself will be included in high level, default: 4"},
  "colors": {"description": "color array for icons. It should have 3 elements, each of which corresponds with a score level, default: ['#F7BA2A', '#F7BA2A', '#F7BA2A']"},
  "void-color": {"description": "color of unselected icons, default: #C6D1DE"},
  "disabled-void-color": {"description": "color of unselected read-only icons, default: #EFF2F7"},
  "texts": {"description": "text array"},
  "show-text": {"type": "boolean", "description": "whether to display texts"},
  "show-score": {"type": "boolean", "description": "whether to display current score. show-score and show-text cannot be true at the same time"},
  "score-template": {"description": "score template, default: {value}"},
  "show-alpha": {"type": "boolean", "description": "whether to display the alpha slider"},
  "color-format": {"options": ["hsl", "hsv", "hex", "rgb"], "description": "color format of v-model, default: hex(when show-alpha is false)/rgb(when show-alpha is true)"},
  "predefine": {"description": "predefined color options, type: array"},
  "titles": {"description": "custom list titles, default: ['List 1', 'List 2']"},
  "button-texts": {"description": "custom button texts, default: []"},
  "render-content": {"description": "custom render function for data items"},
  "left-default-checked": {"description": "key array of initially checked data items of the left list, default: []"},
  "right-default-checked": {"description": "key array of initially checked data items of the right list, default: []"},
  "model": {"description": "data of form component, type: object"},
  "rules": {"description": "validation rules of form"},
  "label-position": {"options": ["left", "right", "top"], "description": "position of label, default: 'right'"},
  "hide-required-asterisk": {"type": "boolean", "description": "whether required fields should have a red asterisk (star) beside their labels, defaults: false"},
  "required": {"type": "boolean", "description": "whether the field is required or not, will be determined by validation rules if omitted"},
  "error": {"description": "field error message, set its value and the field will validate error and show this message immediately"},
  "stripe": {"type": "boolean", "description": "whether Table is striped, default: false"},
  "highlight-current-row": {"type": "boolean", "description": "whether current row is highlighted, default: false"},
  "current-row-key": {"description": "key of current row, a set only prop"},
  "row-class-name": {"description": "function that returns custom class names for a row, or a string assigning class names for every row"},
  "prev-text": {"description": "text for the prev button"},
  "next-text": {"description": "text for the next button"},
  "header-row-class-name": {"description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header"},
  "header-row-style": {"description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header"},
  "header-cell-class-name": {"description": "function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header"},
  "header-cell-style": {"description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header"},
  "cell-class-name": {"description": "function that returns custom class names for a cell, or a string assigning class names for every cell"},
  "cell-style": {"description": "function that returns custom style for a cell, or an object assigning custom style for every cell"},
  "row-style": {"description": "function that returns custom style for a row, or a string assigning custom style for every row"},
  "row-key": {"description": "key of row data, used for optimizing rendering. Required if 'reserve-selection' is on"},
  "default-expand-all": {"type": "boolean", "description": "whether expand all rows by default, works when the table has a column type='expand' or contains tree structure data"},
  "expand-row-keys": {"description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop, type: Array"},
  "default-sort": {"description": "set the default sort column and order. property prop is used to set default sort column, property order is used to set default sort order"},
  "tooltip-effect": {"options": ["dark", "light"], "description": "tooltip 'effect' property"},
  "show-summary": {"type": "boolean", "description": "whether to display a summary row, default: false"},
  "sum-text": {"description": "displayed text for the first column of summary row, default: Sum"},
  "summary-method": {"description": "custom summary method"},
  "span-method": {"description": "method that returns rowspan and colspan"},
  "lazy": {"description": "whether to lazy loading data"},
  "column-key": {"description": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered"},
  "fixed": {"options": ["ture", "left", "right"], "description": "whether column is fixed at left/right. Will be fixed at left if 'true'"},
  "render-header": {"description": "render function for table header of this column"},
  "sortable": {"options": ["ture", "false", "custom"], "description": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the sort-change event of Table"},
  "sort-method": {"description": "sorting method, works when 'sortable' is true. Should return a number, just like Array.sort, type: Function(a, b)"},
  "sort-by": {"description": "specify which property to sort by, works when 'sortable' is true and 'sort-method' is undefined. If set to an Array, the column will sequentially sort by the next property if the previous one is equal, type: Function(row, index)/String/Array"},
  "sort-orders": {"description": "the order of the sorting strategies used when sorting the data, works when sortable is true. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array, default: ['ascending', 'descending', null]"},
  "resizable": {"type": "boolean", "description": "whether column width can be resized, works when border of 'el-table' is 'true'"},
  "formatter": {"description": "function that formats content"},
  "show-overflow-tooltip": {"type": "boolean", "description": "whether to hide extra content and show them in a tooltip when hovering on the cell"},
  "align": {"options": ["left", "center", "right"]},
  "header-align": {"options": ["left", "center", "right"], "description": "alignment of the table header. If omitted, the value of the 'align' attribute will be applied"},
  "label-class-name": {"description": "class name of the label of this column"},
  "selectable": {"description": "function that determines if a certain row can be selected, works when type is 'selection' Function(row, index)"},
  "reserve-selection": {"type": "boolean", "description": "whether to reserve selection after data refreshing, works when type is 'selection'. Note that row-key is required for this to work"},
  "filters": {"description": "an array of data filtering options. For each element in this array, 'text' and 'value' are required"},
  "filter-placement": {"description": "placement for the filter dropdown"},
  "filtered-value": {"description": "filter value for selected data, might be useful when table header is rendered with 'render-header'"},
  "percentage": {"description": "percentage, required, default: 0"},
  "stroke-width": {"description": "the width of progress bar, default: 6"},
  "text-inside": {"type": "boolean", "description": "whether to place the percentage inside progress bar, only works when type is 'line'"},
  "stroke-linecap": {"description": "circle/dashboard type shape at the end path, default: round"},
  "node-key": {"description": "unique identity key name for nodes, its value should be unique across the whole tree"},
  "render-after-expand": {"type": "boolean", "description": "whether to render child nodes only after a parent node is expanded for the first time, default: true"},
  "highlight-current": {"type": "boolean", "description": "whether current node is highlighted, default: false"},
  "load": {"description": "method for loading child row data, only works when lazy is true"},
  "current-node-key": {"description": "key of current node, a set only prop"},
  "default-expanded-keys": {"description": "array of keys of initially expanded nodes"},
  "default-checked-keys": {"description": "array of keys of initially checked nodes"},
  "filter-node-method": {"description": "this function will be executed on each node when use filter method. if return 'false', tree node will be hidden."},
  "indent": {"description": "horizontal indentation of nodes in adjacent levels in pixels, default: 16"},
  "tree-props": {"description": "configuration for rendering nested data, default: {hasChildren:'hasChildren',children:'children'}"},
  "show-checkbox": {"type": "boolean", "description": "whether node is selectable"},
  "check-strictly": {"type": "boolean", "description": "whether checked state of a node not affects its father and child nodes when 'show-checkbox' is 'true'"},
  "draggable": {"type": "boolean", "description": "whether enable tree nodes drag and drop"},
  "small": {"type": "boolean", "description": "whether to use small pagination, default: false"},
  "background": {"type": "boolean", "description": "whether the buttons have a background color"},
  "page-size": {"description": "item count of each page, default: 10"},
  "total": {"description": "total item count"},
  "page-count": {"description": "total page count. Set either 'total' or 'page-count' and pages will be displayed; if you need 'page-sizes', total is required"},
  "pager-count": {"type": "number", "description": "number of pagers. Pagination collapses when the total page count exceeds this value, default: 7"},
  "current-page": {"type": "number", "description": "current page number, supports the .sync modifier, default: 1"},
  "layout": {"options": ["sizes", "prev", "pager", "next", "jumper", "->", "total", "slot"], "description": "layout of Pagination, elements separated with a comma"},
  "page-sizes": {"description": "options of item count per page, example: [10, 20]"},
  "hide-on-single-page": {"description": "whether to hide when there's only one page"},
  "is-dot": {"type": "boolean", "description": "if a little dot is displayed"},
  "animated": {"type": "boolean", "description": "whether showing the animation, default: false"},
  "count": {"type": "number", "description": "how many fake items to render to the DOM, default: 1"},
  "throttle": {"type": "number", "description": "Rendering delay in millseconds, default: 0"},
  "variant": {"options": ["p", "text", "h1", "h3", "caption", "button", "image", "circle", "rect"], "description": "The current rendering skeleton type, default: text"},
  "close-text": {"description": "customized close button text"},
  "show-icon": {"type": "boolean", "description": "if a type icon is displayed"},
  "default-openeds": {"description": "array that contains keys of currently active sub-menus"},
  "default-active": {"description": "index of currently active menu"},
  "unique-opened": {"type": "boolean", "description": "whether only one sub-menu can be active"},
  "menu-trigger": {"description": "how sub-menus are triggered, only works when mode is 'horizontal', default: hover"},
  "router": {"description": "whether vue-router mode is activated. If true, index will be used as 'path' to activate the route action"},
  "route": {"description": "Vue Router object"},
  "separator": {"description": "separator character, default: '/'"},
  "to": {"description": "target route of the link, same as to of vue-router"},
  "command": {"description": "a command to be dispatched to Dropdown's 'command' callback"},
  "divided": {"type": "boolean", "description": "whether a divider is displayed"},
  "space": {"description": "the spacing of each step, will be responsive if omitted. Support percentage."},
  "direction": {"options": ["vertical", "horizontal"], "description": "display direction, default: horizontal"},
  "active": {"description": "current activation step"},
  "process-status": {"options": ["wait", "process", "finish", "error", "success"], "description": "status of current step, default: process"},
  "finish-status": {"options": ["wait", "process", "finish", "error", "success"], "description": "status of end step, default: finish"},
  "align-center": {"type": "boolean", "description": "whether step description is centered"},
  "simple": {"type": "boolean", "description": "whether to apply simple theme"},
  "top": {"description": "value for top of Dialog CSS, default: 15vh"},
  "custom-class": {"description": "custom class names for Dialog"},
  "before-close": {"description": "callback before Dialog closes, and it will prevent Dialog from closing"},
  "effect": {"options": ["dark", "light"], "description": "Choose theme"},
  "transition": {"description": "animation name, default: 'el-fade-in-linear'"},
  "show-arrow": {"type": "boolean", "description": "whether a tooltip arrow is displayed or not"},
  "header": {"description": "Title of the card. Also accepts a DOM passed by slot#header"},
  "body-style": {"description": "CSS style of body,type: object, default: {padding: '20px'}"},
  "shadow": {"options": ["always", "hover", "never"], "description": "when to show card shadows, default: always"},
  "initial-index": {"description": "index of the initially active slide (starting from 0), default: 0"},
  "interval": {"description": "interval of the auto loop, in milliseconds, default: 30000"},
  "indicator-position": {"options": ["outside", "none"], "description": "position of the indicators"},
  "arrow": {"options": ["always", "hover", "nerver"], "description": "when arrows are shown, default: hover"},
  "loop": {"type": "boolean", "description": "display the items in loop, default: true"},
  "placement": {"options": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end", "left", "left-start", "left-end", "right", "right-start", "right-end"], "description": "default: bottom"},
  "value-key": {"description": "unique identity key name for value, required when value is an object"},
  "hide-after": {"description": "timeout in milliseconds to hide tooltip, default: 0"},
  "separator-class": {"description": "class name of icon separator"},
  "tab-position": {"options": ["top", "right", "bottom", "left"], "description": "position of tabs, default: top"},
  "stretch": {"type": "boolean", "description": "whether width of tab automatically fits its container, default: false"},
  "before-leave": {"description": "hook function before switching tab. If false is returned or a Promise is returned and then is rejected, switching will be prevented, type: function(activeName, oldActiveName)"},
  "show-timeout": {"description": "Delay time before show a dropdown, default: 250"},
  "hide-timeout": {"description": "Delay time before hide a dropdown, default: 150"},
  "default-time": {"description": "the default time value after picking a date"},
  "disabled-date": {"description": "a function determining if a date is disabled with that date as its parameter. Should return a Boolean"},
  "shortcuts": {"description": "an object array to set shortcut options, type: { text: string, value: Date }[]"},
  "time-arrow-control": {"type": "boolean", "description": "whether to pick time using arrow buttons"},
  "unlink-panels": {"type": "boolean", "description": "unlink two date-panels in range-picker"},
  "target-order": {"options": ["original", "push", "unshift"], "description": "order strategy for elements in the target list. If set to 'original', the elements will keep the same order as the data source. If set to 'push', the newly added elements will be pushed to the bottom. If set to 'unshift', the newly added elements will be inserted on the top, default: original"},
  "disable-transitions": {"type": "boolean", "description": "whether to disable animations, default: false"},
  "hit": {"type": "boolean", "description": "whether Tag has a highlighted border, default: false"},
  "manual": {"type": "boolean", "description": "whether to control Tooltip manually. mouseenter and mouseleave won't have effects if set to 'true', default: false"},
  "confirm-button-text": {"description": "Confirm button text"},
  "cancel-button-text": {"description": "Cancel button text"},
  "confirm-button-type": {"options": ["primary", "success", "warning", "danger", "info", "text"], "description": "Confirm button type, default: primary"},
  "cancel-button-type": {"options": ["primary", "success", "warning", "danger", "info", "text"], "description": "Cancel button type, default: text"},
  "icon-color": {"description": "Icon color, default: #90"},
  "hide-icon": {"type": "boolean", "description": "is hide Icon, default: false"},
  "timestamp": {"description": "timestamp content"},
  "hide-timestamp": {"type": "boolean", "description": "whether to show timestamp, default: false"},
  "content-position": {"options": ["left", "right", "center"], "description": "customize the content on the divider line, default: center"},
  "hide-on-click-modal": {"type": "boolean", "description": "When enabling preview, use this flag to control whether clicking on backdrop can exit preview mode, default: false"},
  "preview-src-list": {"description": "allow big image preview"},
  "referrer-policy": {"description": "Native referrerPolicy"},
  "scroll-container": {"description": "The container to add scroll listener when using lazy load"},
  "url-list": {"description": "Preview link list"},
  "infinite": {"type": "boolean", "description": "Whether preview is infinite, default: true"},
  "target": {"description": "the target to trigger scroll"},
  "visibility-height": {"type": "number", "description": "the button will not show until the scroll height reaches this value, default, 200"},
  "shape": {"options": ["circle", "square"], "description": "set avatar shape, default: circle"},
  "fit": {"options": ["fill", "contain", "cover", "none", "scale-down"], "description": "same as 'object-fit'"},
  "position": {"options": ["top", "bottom"], "description": "position of affix, default: top"},
  "el-container/direction": {"options": ["vertical", "horizontal"], "description": "vertical when nested with el-header or el-footer; horizontal otherwise"},
  "el-submenu/show-timeout": {"description": "timeout before showing a sub-menu, default: 300"},
  "el-submenu/hide-timeout": {"description": "timeout before hiding a sub-menu, default: 300"},
  "el-submenu/popper-append-to-body": {"type": "boolean", "description": "whether to append the popup menu to body. If the positioning of the menu is wrong, you can try setting this prop, default: level one Submenu: true / other Submenus: false"},
  "el-upload/limit": {"type": "number", "description": "maximum number of uploads allowed"},
  "el-transfer/format": {"description": "texts for checking status in list header, default: { noChecked: '${checked}/${total}', hasChecked: '${checked}/${total}' }"},
  "el-progress/format": {"description": "custom text format, type: function(percentage)"},
  "el-dropdown/placement": {"options": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end"], "description": "placement of pop menu, default: 'bottom-end"},
  "el-timeline-item/placement": {"options": ["top", "bottom"], "description": "position of timestamp, default: 'bottom"},
  "el-menu/background-color": {"description": "background color of Menu (hex format), default: #ffffff"},
  "el-menu/text-color": {"description": "text color of Menu (hex format), default: #303133"},
  "el-menu/active-text-color": {"description": "text color of currently active menu item (hex format), default: #409EFF"},
  "el-tooltip/content": {"description": "display content, can be overridden by slot#content"},
  "el-popover/content": {"description": "popover content, can be replaced with a default slot"},
  "el-dropdown/trigger": {"options": ["hover", "click"], "description": "default: hover"},
  "el-carousel/trigger": {"options": ["hover", "click"], "description": "default: hover"},
  "el-popover/trigger": {"options": ["click", "focus", "hover", "manual"], "description": "how the popover is triggered, default: click"},
  "el-tab-pane/name": {"description": "identifier corresponding to the activeName of Tabs, representing the alias of the tab-pane"},
  "el-tab-pane/lazy": {"description": "whether Tab is lazily rendered"},
  "el-menu/model": {"options": ["horizontal", "vertical"], "description": "menu display mode"},
  "el-tree/render-content": {"description": "render function for tree node"},
  "el-step/status": {"options": ["wait", "process", "finish", "error", "success"], "description": "current status. It will be automatically set by Steps if not configured."},
  "el-progress/status": {"options": ["success", "exception", "warning"], "description": "the current status of progress bar"},
  "el-dialog/width": {"description": "width of Dialog, default: 50%"},
  "el-popover/width": {"description": "popover width, Min width 150px"},
  "el-progress/width": {"description": "the canvas width of circle progress bar, default: 126"},
  "el-table-column/min-width": {"description": "column minimum width. Columns with width has a fixed width, while columns with min-width has a width that is distributed in proportion"},
  "el-table/empty-text": {"description": "Displayed text when data is empty. You can customize this area with slot='empty'"},
  "el-tree/empty-text": {"description": "text displayed when data is void"},
  "el-form-item/prop": {"description": "a key of model. In the use of validate and resetFields method, the attribute is required"},
  "el-table-column/prop": {"description": "field name. You can also use its alias: property"},
  "el-row/align": {"options": ["top", "middle", "bottom"], "description": "vertical alignment of flex layout"},
  "el-row/offset": {"description": "number of spacing on the left side of the grid"},
  "el-tooltip/offset": {"description": "offset of the Tooltip, default: 0"},
  "el-popover/offset": {"description": "offset of the popover, default: 0"},
  "el-affix/offset": {"description": "offset distance, default: 0"},
  "el-icon/name": {"description": "icon name"},
  "el-carousel-item/name": {"description": "name of the item, can be used in 'setActiveItem'"},
  "el-collapse-item/name": {"description": "unique identification of the panel"},
  "el-switch/name": {"description": "input name of Switch"},
  "el-upload/name": {"description": "key name for uploaded file, default: 'file'"},
  "el-input/resize": {"options": ["none", "both", "horizontal", "vertical"], "description": "control the resizability"},
  "el-input/step": {"description": "same as step in native input"},
  "el-input-number/step": {"description": "incremental step"},
  "el-time-select/step": {"description": "time step, default: 00:30"},
  "el-carousel/type": {"options": ["card"], "description": "type of the Carousel"},
  "el-dropdown/type": {"options": ["primary", "success", "warning", "danger", "info", "text"], "description": "menu button type, refer to Button Component, only works when 'split-button' is true"},
  "el-tabs/type": {"options": ["card", "border-card"], "description": "type of Tab"},
  "el-progress/type": {"options": ["line", "circle", "dashboard"], "description": "the type of progress bar, default: line"},
  "el-row/type": {"options": ["flex"], "description": "layout mode, you can use 'flex', works in modern browsers"},
  "el-input/type": {"description": "Same as the 'type' attribute of native input, except that it can be 'textarea'"},
  "el-button/type": {"options": ["primary", "success", "warning", "danger", "info", "text"], "description": "button type"},
  "el-badge/type": {"options": ["primary", "success", "warning", "danger", "info"], "description": "badge type"},
  "el-link/type": {"options": ["primary", "success", "warning", "danger", "info"], "description": "button type"},
  "el-date-picker/type": {"options": ["year", "month", "date", "dates", "datetime", "week", "datetimerange", "daterange", "monthrange"], "description": "type of the picker, default: date"},
  "el-date-picker/cell-class-name": {"description": "set custom className"},
  "el-table-column/type": {"options": ["selection", "index", "expand"], "description": "type of the column. If set to 'selection', the column will display checkbox. If set to 'index', the column will display index of the row (staring from 1). If set to 'expand', the column will display expand icon."},
  "el-tag/type": {"options": ["info", "success", "warning", "danger"], "description": "theme"},
  "el-alert/type": {"options": ["success", "warning", "info", "error"], "description": "component type"},
  "el-timeline-item/type": {"options": ["primary", "success", "warning", "danger", "info"], "description": "node type"},
    "el-checkbox-group/min": {"description": "minimum number of checkbox checked"},
  "el-input-number/min": {"description": "the minimum allowed value"},
  "el-slider/min": {"description": "minimum value, defalult: 0"},
  "el-slider/max": {"description": "maximum value, defalult: 100"},
  "el-slider/debounce": {"description": "debounce delay when typing, in millisecond, works when 'show-input' is true, default: 300"},
  "el-autocomplete/debounce": {"description": "debounce delay when typing, in milliseconds, default: 300"},
  "el-cascader/debounce": {"description": "debounce delay when typing filter keyword, in milliseconds, default: 300"},
  "el-rate/max": {"description": "max rating score, default: 5"},
  "el-badge/max": {"description": "maximum value, shows '{max}+' when exceeded. Only works if 'value' is a Number"},
  "el-checkbox-group/max": {"description": "maximum number of checkbox checked"},
  "el-input-number/max": {"description": "the maximum allowed value"},
  "el-slider/height": {"description": "Slider height, required in vertical mode"},
  "el-table/height": {"description": "Table's height. By default it has an auto height. If its value is a number, the height is measured in pixels; if its value is a string, the height is affected by external styles"},
  "el-table/max-height": {"description": "Table's max-height. The height of the table starts from 'auto' until it reaches the maxHeight limit. The 'maxHeight' is measured in pixels, same as 'height'"},
  "el-tooltip/open-delay": {"description": "delay of appearance, in millisecond, default: 0"},
  "el-popover/open-delay": {"description": "delay of appearance when trigger is hover, in milliseconds"},
  "el-dialog/open-delay": {"description": "Time(milliseconds) before open, default: 0"},
  "el-dialog/close-delay": {"description": "Time(milliseconds) before close, default: 0"},
  "el-popover/close-delay": {"description": "delay before disappearing when trigger is hover, in milliseconds, default: 200"},
  "el-input/size": {"options": ["medium", "small", "mini"], "description": "size of Input, works when type is not 'textarea'"},
  "el-space/size": {"options": ["large", "medium", "small", "mini"], "description": "Spacing size, support string/number/[horizontal number, vertical number], default: small"},
  "el-timeline-item/size": {"options": ["large", "normal"], "description": "node size, default: normal"},
  "el-autocomplete/palcement": {"options": ["top", "top-start", "top-end", "bottom", "bottom-start", "bottom-end"], "description": "placement of the popup menu, default: 'bottom-start"},
  "el-tag/effect": {"options": ["dark", "light", "plain"], "description": "component theme"},
  "el-tree/default-expand-all": {"type": "boolean", "description": "whether to expand all nodes by default"},
  "el-skeleton/rows": {"type": "number", "description": "numbers of the row, only useful when no template slot were given, default: 3"},
  "el-alert/center": {"type": "boolean", "description": "whether to center the text"},
  "el-dialog/center": {"type": "boolean", "description": "whether to align the header and footer in center"},
  "el-form/inline-message": {"type": "boolean", "description": "whether to display the error message inline with the form item"},
  "el-form-item/inline-message": {"type": "boolean", "description": "inline style validate message"},
  "el-calendar/range": {"description": "time range, including start time and end time. Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months"},
  "el-backtop/right": {"type": "number", "description": "right distance, default, 40"},
  "el-backtop/bottom": {"type": "number", "description": "bottom distance, default, 40"},
  "el-avatar/size": {"type": "string|number" , "options": ["large", "medium", "small"], "description": "set avatar size, type: string|number, default: large"},
  "el-drawer/append-to-body": {"type": "boolean", "description": "Controls should Drawer be inserted to DocumentBody Element, nested Drawer must assign this param to true, default: false"},
  "el-drawer/before-close": {"description": "If set, closing procedure will be halted"},
  "el-drawer/close-on-press-escape": {"type": "boolean", "description": "Indicates whether Drawer can be closed by pressing ESC, default: true"},
  "el-drawer/custom-class": {"description": "Extra class names for Drawer"},
  "el-drawer/destroy-on-close": {"type": "boolean", "description": "Indicates whether children should be destroyed after Drawer closed, default: false"},
  "el-drawer/direction": {"options": ["rtl", "ltr", "ttb", "btt"], "description": "Drawer's opening direction, fefault: rtl"},
  "el-drawer/size": {"type": "number|string", "description": "Drawer's size, if Drawer is horizontal mode, it effects the width property, otherwise it effects the height property, when size is number type, it describes the size by unit of pixels; when size is string type, it should be used with x% notation, other wise it will be interpreted to pixel unit, default: 30%"},
  "el-deawer/with-header": {"description": "Flag that controls the header section's existance, default to true, when withHeader set to false, both title attribute and title slot won't work, default: true"},
  "el-affix/target": {"description": "target container (CSS selector)"},
  "loading": {"type": "boolean"},
  "disabled": {"type": "boolean"},
  "autofocus": {"type": "boolean"},
  "checked": {"type": "boolean"},
  "controls": {"type": "boolean"},
  "remote": {"type": "boolean"},
  "auto-upload": {"type": "boolean"},
  "show-message": {"type": "boolean"},
  "hidden": {"type": "boolean"},
  "visible-arrow": {"type": "boolean"},
  "addable": {"type": "boolean"},
  "editable": {"type": "boolean"},
  "closable": {"type": "boolean"},
  "border": {"type": "boolean"},
  "native": {"type": "boolean"},
  "noresize": {"type": "boolean"},
  "collapse-transition": {"type": "boolean", "description": "whether to enable the collapse transition, default: true"},
  "select-on-indeterminate": {"type": "boolean", "description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected. default: true"},
  "validate-on-rule-change": {"type": "boolean", "description": "whether to trigger validation when the 'rules' prop is changed, default: true"},
  "fullscreen": {"type": "boolean", "description": "whether the Dialog takes up full screen, default: false"},
  "autoplay": {"type": "boolean", "description": "whether automatically loop the slides, default: true"},
  "enterable": {"type": "boolean", "description": "enterable whether the mouse can enter the tooltip, default: true"},
  "show-close": {"type": "boolean", "description": "whether to show a close button, default: true"},
  "close-on-press-escape": {"type": "boolean", "description": "whether the Dialog can be closed by pressing ESC, default: true"},
  "close-on-click-modal": {"type": "boolean", "description": "whether the Dialog can be closed by clicking the mask, default: true"},
  "lock-scroll": {"type": "boolean", "description": "whether scroll of body is disabled while Dialog is displayed, default: true"},
  "append-to-body": {"type": "boolean", "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to 'true', default: false"},
  "modal": {"type": "boolean", "description": "whether a mask is displayed, default: true"},
  "destroy-on-close": {"type": "boolean", "description": "Destroy elements in Dialog when closed, default: false"},
  "visible": {"type": "boolean", "description": "whether popover is visible, default: false"},
  "hide-on-click": {"type": "boolean", "description": "whether to hide menu after clicking menu-item"},
  "split-button": {"type": "boolean", "description": "whether a button group is displayed"},
  "replace": {"type": "boolean", "description": "if 'true', the navigation will not leave a history record, default: false"},
  "auto-expand-parent": {"type": "boolean", "description": "whether to expand father node when a child node is expanded, default: true"},
  "expand-on-click-node": {"type": "boolean", "description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon, default: true"},
  "check-on-click-node": {"type": "boolean", "description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox, default: false"},
  "filter-multiple": {"type": "boolean", "description": "whether data filtering supports multiple options"},
  "show-header": {"type": "boolean", "description": "whether table header is visible"},
  "inline": {"type": "boolean", "description": "whether the form is inline"},
  "indeterminate": {"type": "boolean", "description": "same as indeterminate in native checkbox"},
  "plain": {"type": "boolean", "description": "determine whether it's a plain button"},
  "vertical": {"type": "boolean", "description": "defaults: false"},
  "collapse": {"type": "boolean", "description": "whether the menu is collapsed (available only in vertical mode)"},
  "el-table/fit": {"type": "boolean", "description": "whether width of column automatically fits its container"},
  "el-collapse/accordion": {"type": "boolean", "description": "whether to activate accordion mode, default: false"},
  "el-tree/accordion": {"type": "boolean", "description": "whether only one node among the same level can be expanded at one time, default: false"},
  "update:model-value": {"type": "event"},
  "update:current-page": {"type": "event"},
  "update:page-size": {"type": "event"},
  "update:visible": {"type": "event"},
  "change": {"type": "event"},
  "select": {"type": "event"},
  "click": {"type": "event"},
  "input": {"type": "event"},
  "blur": {"type": "event"},
  "focus": {"type": "event"},
  "method": {"type": "event"},
  "back": {"type": "event"},
  "visible-change": {"type": "event"},
  "remove-tag": {"type": "event"},
  "size-change": {"type": "event"},
  "prev-click": {"type": "event"},
  "next-click": {"type": "event"},
  "close": {"type": "event"},
  "closed": {"type": "event"},
  "open": {"type": "event"},
  "opened": {"type": "event"},
  "confirm": {"type": "event"},
  "cancel": {"type": "event"},
  "active-change": {"type": "event"},
  "switch": {"type": "event"},
  "check": {"type": "event", "description": "triggers after clicking the checkbox of a node"},
  "show": {"type": "event", "description": "triggers when popover shows"},
  "hide": {"type": "event", "description": "triggers when popover hides"},
  "tab-click": {"type": "event", "description": "triggers when a tab is clicked"},
  "tab-remove": {"type": "event", "description": "triggers when tab-remove button is clicked"},
  "tab-add": {"type": "event", "description": "triggers when tab-add button is clicked"},
  "edit": {"type": "event", "description": "triggers when tab-add button or tab-remove is clicked"},
  "node-expand": {"type": "event", "description": "triggers when current node open"},
  "node-collapse": {"type": "event", "description": "triggers when current node close"},
  "node-click":  {"type": "event", "description": "triggers when a node is clicked"},
  "node-contextmenu": {"type": "event", "description": "triggers when a node is clicked by right button"},
  "check-change":  {"type": "event", "description": "triggers when the selected state of the node changes"},
  "select-all": {"type": "event", "description": "triggers when user clicks the checkbox in table header, arg: selection"},
  "selection-change": {"type": "event", "description": "triggers when selection changes, arg: selection"},
  "cell-mouse-enter": {"type": "event", "description": "triggers when hovering into a cell, arg: row, column, cell, event"},
  "cell-mouse-leave": {"type": "event", "description": "triggers when hovering out of a cell, arg: row column, cell, event"},
  "cell-click": {"type": "event", "description": "triggers when clicking a cell, arg: row, column, cell, event"},
  "cell-dbclick": {"type": "event", "description": "triggers when double clicking a cell, arg: row, column, cell, event"},
  "row-click": {"type": "event", "description": "triggers when clicking a row, arg: row, event, column"},
  "row-contextmenu": {"type": "event", "description": "triggers when user right clicks on a row, arg: row, event"},
  "row-dbclick": {"type": "event", "description": "triggers when double clicking a row, arg: row, event"},
  "header-click": {"type": "event", "description": "triggers when clicking a column header, arg: column, event"},
  "sort-change": {"type": "event", "description": "triggers when Table's sorting changes, arg: { column, prop, order }"},
  "filter-change": {"type": "event", "description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered, arg: filters"},
  "current-change": {"type": "event", "description": "triggers when current row changes, arg: currentRow, oldCurrentRow"},
  "header-draggend": {"type": "event", "description": "triggers when finish dragging header, arg: newWidth, oldWidth, column, event"},
  "expand-change": {"type": "event", "description": "triggers when expand option changes"},
  "left-check-change": {"type": "event", "description": "triggers when end user changes the checked state of any data item in the left list"},
  "right-check-change": {"type": "event", "description": "triggers when end user changes the checked state of any data item in the right list"},
  "node-drag-start": {"type": "event", "description": "triggers when dragging starts"},
  "node-drag-enter": {"type": "event", "description": "triggers when the dragging node enters another node"},
  "node-drag-leave": {"type": "event", "description": "triggers when the dragging node leaves a node"},
  "node-drag-over": {"type": "event", "description": "triggers when dragging over a node (like mouseover event)"},
  "node-drag-end": {"type": "event", "description": "triggers when dragging ends"},
  "node-drop": {"type": "event", "description": "triggers after the dragging node is dropped"},
  "validate": {"type": "event", "description": "triggers after a form item is validated"},
  "el-table/select": {"type": "event", "description": "triggers when user clicks the checkbox in a row, arg: selection, row"},
  "el-tag/close": {"type": "event", "description": "triggers when Tab is removed"},
  "el-tree/current-change": {"type": "event", "description": "triggers when current node changes"},
  "el-pagination/currentPage": {"type": "event", "description": "triggers when 'current-page' changes"},
  "el-dropdown/command": {"type": "event", "description": "triggers when a dropdown item is clicked"},
  "el-input/clear": {"type": "event", "description": "triggers when the Input is cleared by the button which generated by the 'clearable' attribute"},
  "el-select/clear": {"type": "event", "description": "triggers when the clear icon is clicked in a clearable Select"},
  "el-popover/after-enter": {"type": "event", "description": "triggers when the entering transition ends"},
  "el-popover/after-leave": {"type": "event", "description": "triggers when the leaving transition ends"},
  "el-image/load": {"type": "event", "description": "Same as native load"},
  "el-image/error": {"type": "event", "description": "Same as native error"},
  "el-avatar/error": {"type": "event", "description": "handler when img load error, return false to prevent default fallback behavior"},
  "el-affix/change": {"type": "event", "description": "triggers when fixed state changed, arg: value"},
  "el-affix/scroll": {"type": "event", "description": "triggers when scrolling, arg: scroll top and fixed state"},
  "status-icon": {"type": "boolean", "description": "whether to display an icon indicating the validation result"},
  "format-tooltip": {},
  "filter-method": {},
  "remote-method": {},
  "label": {},
  "placeholder": {},
  "max": {},
  "min": {},
  "popper-class": {},
  "options": {},
  "props": {},
  "model-value": {},
  "value": {},
  "width": {},
  "height": {},
  "data": {},
  "index": {},
  "text-color": {},
  "filter-placeholder": {},
  "label-width": {},
  "label-suffix": {},
  "class-name": {},
  "color": {},
  "icon-class": {},
  "modal-class": {},
  "title": {},
  "description": {},
  "alt": {},
  "src": {},
  "srcSet": {},
  "image": {},
  "image-size": {},
  "content": {},
  "tabindex": {},
  "z-index": {},
  "wrap-style": {},
  "wrap-class": {},
  "view-style": {},
  "view-class": {},
  "popper-options": {},
  "v-loading": {"global": true},
  "element-loading-text": {"global": true},
  "element-loading-spinner": {"global": true},
  "element-loading-background": {"global": true},
  "v-infinite-scroll": {"global": true},
  "infinite-scroll-disabled": {"global": true},
  "infinite-scroll-delay": {"global": true},
  "infinite-scroll-distance": {"global": true},
  "infinite-scroll-immediate": {"global": true},
  "class": {"global": true, "type": "icon"},
  "void-icon-class": {"type": "icon", "description": "class name of unselected icons, default: el-icon-star-off"},
  "disabled-void-icon-class": {"type": "icon", "description": "class name of unselected read-only icons, default: el-icon-star-on"},
  "icon-classes": {"type": "icon", "description": "array of class names of icons. It should have 3 elements, each of which corresponds with a score level, default: ['el-icon-star-on', 'el-icon-star-on','el-icon-star-on']"},
  "clear-icon": {"type": "icon", "description": "Custom clear icon class, default: 'el-icon-circle-close"},
  "prefix-icon": {"type":"icon", "description": "prefix icon class"},
  "suffix-icon": {"type":"icon", "description": "suffix icon class"},
  "active-icon-class": {"type": "icon", "description": "class name of the icon displayed when in on state, overrides 'active-text'"},
  "inactive-icon-class": {"type": "icon", "description": "class name of the icon displayed when in off state, overrides 'inactive-text'"},
  "icon": {"type": "shortcut-icon"},
  "icons": ["el-icon-arrow-down", "el-icon-arrow-left","el-icon-arrow-right", "el-icon-arrow-up", "el-icon-caret-bottom", "el-icon-caret-left", "el-icon-caret-right", "el-icon-caret-top", "el-icon-check", "el-icon-circle-check", "el-icon-circle-cross", "el-icon-close", "el-icon-upload", "el-icon-d-arrow-left", "el-icon-d-arrow-right", "el-icon-d-caret", "el-icon-date", "el-icon-delete", "el-icon-document", "el-icon-edit", "el-icon-information", "el-icon-loading", "el-icon-menu", "el-icon-message", "el-icon-minus", "el-icon-more", "el-icon-picture", "el-icon-plus", "el-icon-search", "el-icon-setting", "el-icon-share", "el-icon-star-off", "el-icon-star-on", "el-icon-time", "el-icon-warning", "el-icon-delete2", "el-icon-upload2", "el-icon-view"]
}
