{
  "$schema": "http://json.schemastore.org/web-types",
  "framework": "vue",
  "name": "element-plus",
  "version": "1.0.0",
  "contributions": {
    "html": {
      "types-syntax": "typescript",
      "description-markup": "markdown",
      "tags": [
        {
          "name": "el-row",
          "description": "A row in grid system",
          "doc-url": "https://element-plus.org/#/en-US/component/layout",
          "attributes": [
            {
              "name": "gutter",
              "default": "0",
              "description": "grid spacing",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "layout mode, you can use flex, works in modern browsers",
              "value": {
                "type": "'flex",
                "kind": "expression"
              }
            },
            {
              "name": "justify",
              "default": "start",
              "description": "horizontal alignment of flex layout",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "default": "top",
              "description": "vertical alignment of flex layout",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "tag",
              "default": "div",
              "description": "custom element tag",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-col",
          "description": "A column in grid system",
          "doc-url": "https://element-plus.org/#/en-US/component/layout",
          "attributes": [
            {
              "name": "span",
              "default": "24",
              "description": "number of column the grid spans",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "default": "0",
              "description": "number of spacing on the left side of the grid",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "push",
              "default": "0",
              "description": "number of columns that grid moves to the right",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "pull",
              "default": "0",
              "description": "number of columns that grid moves to the left",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "xs",
              "description": "`<768px` Responsive columns or column props object",
              "value": {
                "type": "number | object",
                "kind": "expression"
              }
            },
            {
              "name": "sm",
              "description": "`≥768px` Responsive columns or column props object",
              "value": {
                "type": "number | object",
                "kind": "expression"
              }
            },
            {
              "name": "md",
              "description": "`≥992px` Responsive columns or column props object",
              "value": {
                "type": "number | object",
                "kind": "expression"
              }
            },
            {
              "name": "lg",
              "description": "`≥1200px` Responsive columns or column props object",
              "value": {
                "type": "number | object",
                "kind": "expression"
              }
            },
            {
              "name": "xl",
              "description": "`≥1920px` Responsive columns or column props object",
              "value": {
                "type": "number | object",
                "kind": "expression"
              }
            },
            {
              "name": "tag",
              "default": "div",
              "description": "custom element tag",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-container",
          "description": "wrapper container. When nested with a <el-header> or <el-footer>, all its child elements will be vertically arranged. Otherwise horizontally.",
          "doc-url": "https://element-plus.org/#/en-US/component/container",
          "attributes": [
            {
              "name": "direction",
              "description": "layout direction for child elements, vertical when nested with el-header or el-footer; horizontal otherwise",
              "value": {
                "type": "'horizontal' | 'vertical'",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-header",
          "description": "container for headers",
          "doc-url": "https://element-plus.org/#/en-US/component/container",
          "attributes": [
            {
              "name": "height",
              "default": "60px",
              "description": "height of the header",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-aside",
          "description": "container for side sections",
          "doc-url": "https://element-plus.org/#/en-US/component/container",
          "attributes": [
            {
              "name": "width",
              "default": "300px",
              "description": "width of the side section",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-main",
          "description": "container for main sections",
          "doc-url": "https://element-plus.org/#/en-US/component/container"
        },
        {
          "name": "el-footer",
          "description": "container for footers",
          "doc-url": "https://element-plus.org/#/en-US/component/container",
          "attributes": [
            {
              "name": "height",
              "default": "60px",
              "description": "height of the footer",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-icon",
          "doc-url": "https://element-plus.org/#/en-US/component/icon",
          "attributes": [
            {
              "name": "name",
              "description": "icon name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-button",
          "description": "Commonly used button.",
          "doc-url": "https://element-plus.org/#/en-US/component/button",
          "attributes": [
            {
              "name": "size",
              "description": "button size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "default": "default",
              "description": "button type",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "plain",
              "default": "false",
              "description": "determine whether it's a plain button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "round",
              "default": "false",
              "description": "determine whether it's a round button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "circle",
              "default": "false",
              "description": "determine whether it's a circle button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "default": "false",
              "description": "determine whether it's loading",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "disable the button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "icon class name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "autofocus",
              "default": "false",
              "description": "same as native button's `autofocus`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "native-type",
              "default": "button",
              "description": "same as native button's `type`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Triggered when the button is clicked"
            }
          ]
        },
        {
          "name": "el-button-group",
          "description": "Displayed as a button group, can be used to group a series of similar operations",
          "doc-url": "https://element-plus.org/#/en-US/component/button"
        },
        {
          "name": "el-link",
          "description": "Text hyperlink",
          "doc-url": "https://element-plus.org/#/en-US/component/link",
          "attributes": [
            {
              "name": "type",
              "default": "default",
              "description": "link type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "underline",
              "default": "true",
              "description": "whether the component has underline",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the component is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "href",
              "description": "same as native hyperlink's `href`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "class name of icon",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Triggered when the button is clicked"
            }
          ]
        },
        {
          "name": "el-space",
          "description": "provide unified space between each components",
          "doc-url": "https://element-plus.org/#/en-US/component/space",
          "attributes": [
            {
              "name": "alignment",
              "default": "center",
              "description": "Controls the alignment of items",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "default": "horizontal",
              "description": "Placement direction",
              "value": {
                "type": "'horizontal' | 'vertical'",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-cls",
              "description": "Prefix for space-items",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "spacer",
              "description": "Spacer",
              "value": {
                "type": "string | number | VNode",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "small",
              "description": "Spacing size",
              "value": {
                "type": "string | number | array",
                "kind": "expression"
              }
            },
            {
              "name": "wrap",
              "default": "false",
              "description": "Auto wrapping",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-radio",
          "description": "Single selection among multiple options",
          "doc-url": "https://element-plus.org/#/en-US/component/radio",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "the value of Radio",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "the value of Radio",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "border",
              "default": "false",
              "description": "whether to add a border around Radio",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of the Radio, only works when `border` is true",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "native 'name' attribute",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the bound value changes"
            }
          ]
        },
        {
          "name": "el-radio-group",
          "doc-url": "https://element-plus.org/#/en-US/component/radio",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "the size of radio buttons or bordered radios",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the nesting radios are disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "text-color",
              "default": "#ffffff",
              "description": "font color when button is active",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fill",
              "default": "#409EFF",
              "description": "border and background color when button is active",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the bound value changes"
            }
          ]
        },
        {
          "name": "el-radio-button",
          "doc-url": "https://element-plus.org/#/en-US/component/radio",
          "attributes": [
            {
              "name": "label",
              "description": "the value of Radio",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether radio is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "native 'name' attribute",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-checkbox",
          "description": "A group of options for multiple choices",
          "doc-url": "https://element-plus.org/#/en-US/component/checkbox",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "value of the Checkbox when used inside a `checkbox-group`",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "true-label",
              "description": "value of the Checkbox if it's checked",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "false-label",
              "description": "value of the Checkbox if it's not checked",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the Checkbox is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "border",
              "default": "false",
              "description": "whether to add a border around Checkbox",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of the Checkbox, only works when `border` is true",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "native 'name' attribute",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "checked",
              "default": "false",
              "description": "if the Checkbox is checked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "indeterminate",
              "default": "false",
              "description": "same as `indeterminate` in native checkbox",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the binding value changes"
            }
          ]
        },
        {
          "name": "el-checkbox-group",
          "doc-url": "https://element-plus.org/#/en-US/component/checkbox",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of checkbox buttons or bordered checkboxes",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the nesting checkboxes are disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "description": "minimum number of checkbox checked",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "maximum number of checkbox checked",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "text-color",
              "default": "#ffffff",
              "description": "font color when button is active",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fill",
              "default": "#409EFF",
              "description": "border and background color when button is active",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the binding value changes"
            }
          ]
        },
        {
          "name": "el-checkbox-button",
          "doc-url": "https://element-plus.org/#/en-US/component/checkbox",
          "attributes": [
            {
              "name": "label",
              "description": "the value of Radio",
              "value": {
                "type": "string | number | boolean",
                "kind": "expression"
              }
            },
            {
              "name": "true-label",
              "description": "value of the Checkbox if it's checked",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "false-label",
              "description": "value of the Checkbox if it's not checked",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether radio is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "native 'name' attribute",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "checked",
              "default": "false",
              "description": "if the Checkbox is checked",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-input",
          "description": "Input data using mouse or keyboard",
          "doc-url": "https://element-plus.org/#/en-US/component/input",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "default": "text",
              "description": "type of input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "maxlength",
              "default": "text",
              "description": "same as `maxlength` in native input",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "minlength",
              "default": "text",
              "description": "same as `minlength` in native input",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "show-word-limit",
              "default": "false",
              "description": "whether show word count，only works when `type` is 'text' or 'textarea'",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder of Input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "false",
              "description": "whether to show clear button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-password",
              "default": "false",
              "description": "whether to show toggleable password input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Input is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of Input, works when `type` is not 'textarea'",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-icon",
              "description": "prefix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "suffix-icon",
              "description": "suffix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "rows",
              "default": "2",
              "description": "number of rows of textarea, only works when `type` is 'textarea'",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "autosize",
              "default": "false",
              "description": "whether textarea has an adaptive height, only works when `type` is 'textarea'. Can accept an object, e.g. { minRows: 2, maxRows: 6 }",
              "value": {
                "type": "boolean | object",
                "kind": "expression"
              }
            },
            {
              "name": "autocomplete",
              "default": "off",
              "description": "same as `autocomplete` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "default": "false",
              "description": "same as `readonly` in native input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "same as `max` in native input"
            },
            {
              "name": "min",
              "description": "same as `min` in native input"
            },
            {
              "name": "step",
              "description": "same as `step` in native input"
            },
            {
              "name": "resize",
              "description": "control the resizability",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "autofocus",
              "default": "false",
              "description": "same as `autofocus` in native input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "form",
              "description": "same as `form` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "tabindex",
              "description": "input tabindex",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "validate-event",
              "default": "true",
              "description": "whether to trigger form validation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            },
            {
              "name": "change",
              "description": "triggers only when the input box loses focus or the user presses Enter"
            },
            {
              "name": "input",
              "description": "triggers when the Input value change"
            },
            {
              "name": "clear",
              "description": "triggers when the Input is cleared by clicking the clear button"
            }
          ],
          "slots": [
            {
              "name": "prefix",
              "description": "content as Input prefix, only works when `type` is 'text'"
            },
            {
              "name": "suffix",
              "description": "content as Input suffix, only works when `type` is 'text'"
            },
            {
              "name": "prepend",
              "description": "content to prepend before Input, only works when `type` is 'text'"
            },
            {
              "name": "append",
              "description": "content to append after Input, only works when `type` is 'text'"
            }
          ]
        },
        {
          "name": "el-autocomplete",
          "doc-url": "https://element-plus.org/#/en-US/component/input",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "the placeholder of Autocomplete",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "false",
              "description": "whether to show clear button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Autocomplete is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value-key",
              "description": "key name of the input suggestion object for display",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "debounce",
              "default": "300",
              "description": "debounce delay when typing, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "default": "bottom-start",
              "description": "placement of the popup menu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fetch-suggestions",
              "description": "a method to fetch input suggestions. When suggestions are ready, invoke `callback(data:[])` to return them to Autocomplete",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for autocomplete's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "trigger-on-focus",
              "default": "true",
              "description": "whether show suggestions when input focus",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "select-when-unmatched",
              "default": "false",
              "description": "whether to emit a select event on enter when there is no autocomplete match",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-icon",
              "description": "prefix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "suffix-icon",
              "description": "suffix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-loading",
              "default": "false",
              "description": "whether to hide the loading icon in remote search",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-append-to-body",
              "default": "false",
              "description": "whether to append the dropdown to body. If the positioning of the dropdown is wrong, you can try to set this prop to false",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "highlight-first-item",
              "default": "false",
              "description": "whether to highlight first item in remote search suggestions by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "select",
              "description": "triggers when a suggestion is clicked"
            },
            {
              "name": "change",
              "description": "triggers when the icon inside Input value change"
            }
          ],
          "slots": [
            {
              "name": "prefix",
              "description": "content as Input prefix"
            },
            {
              "name": "suffix",
              "description": "content as Input suffix"
            },
            {
              "name": "prepend",
              "description": "content to prepend before Input"
            },
            {
              "name": "append",
              "description": "content to append after Input"
            }
          ]
        },
        {
          "name": "el-input-number",
          "description": "Input numerical values with a customizable range",
          "doc-url": "https://element-plus.org/#/en-US/component/input-number",
          "attributes": [
            {
              "name": "model-value",
              "default": "0",
              "description": "binding value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "default": "Infinity",
              "description": "the minimum allowed value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "default": "-Infinity",
              "description": "the maximum allowed value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "default": "1",
              "description": "incremental step",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "step-strictly",
              "default": "false",
              "description": "whether input value can only be multiple of step",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "precision",
              "description": "precision of input value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "large",
              "description": "size of the component",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the component is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "controls",
              "default": "true",
              "description": "whether to enable the control buttons",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "controls-position",
              "description": "position of the control buttons",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder in input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the value changes"
            },
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            }
          ]
        },
        {
          "name": "el-select",
          "description": "When there are plenty of options, use a drop-down menu to display and select desired ones",
          "doc-url": "https://element-plus.org/#/en-US/component/select",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "boolean | string | number",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "default": "false",
              "description": "whether multiple-select is activated",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Select is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "value-key",
              "default": "value",
              "description": "unique identity key name for value, required when value is an object",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "large",
              "description": "size of Input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "false",
              "description": "whether select can be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapse-tags",
              "default": "false",
              "description": "whether to collapse tags to a text when multiple selecting",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "multiple-limit",
              "default": "0",
              "description": "maximum number of options user can select when `multiple` is `true`. No limit when set to 0",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "the name attribute of select input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "autocomplete",
              "default": "off",
              "description": "the autocomplete attribute of select input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "filterable",
              "default": "false",
              "description": "whether Select is filterable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-create",
              "default": "false",
              "description": "whether creating new items is allowed. To use this, `filterable` must be true",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-method",
              "description": "custom filter method",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "remote",
              "default": "false",
              "description": "whether options are loaded from server",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "remote-method",
              "description": "custom remote search method",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "default": "false",
              "description": "whether Select is loading data from server",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading-text",
              "default": "Loading",
              "description": "displayed text while loading data from server",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "no-match-text",
              "default": "No matching data",
              "description": "displayed text when no data matches the filtering query, you can also use slot `empty`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "no-data-text",
              "default": "No data",
              "description": "displayed text when there is no options, you can also use slot `empty`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for Select's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "reserve-keyword",
              "default": "false",
              "description": "when `multiple` and `filter` is true, whether to reserve current keyword after selecting an option",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-first-option",
              "default": "false",
              "description": "select first matching option on enter key. Use with `filterable` or `remote`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-append-to-body",
              "default": "false",
              "description": "whether to append the popper menu to body. If the positioning of the popper is wrong, you can try to set this prop to false",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "automatic-dropdown",
              "default": "false",
              "description": "for non-filterable Select, this prop decides if the option menu pops up when the input is focused",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "clear-icon",
              "default": "el-icon-circle-close",
              "description": "Custom clear icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the selected value changes"
            },
            {
              "name": "visible-change",
              "description": "triggers when the dropdown appears/disappears"
            },
            {
              "name": "remove-tag",
              "description": "triggers when a tag is removed in multiple mode"
            },
            {
              "name": "clear",
              "description": "triggers when the clear icon is clicked in a clearable Select"
            },
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Option component list"
            },
            {
              "name": "prefix",
              "description": "content as Select prefix"
            },
            {
              "name": "empty",
              "description": "content when there is no options"
            }
          ]
        },
        {
          "name": "el-option-group",
          "doc-url": "https://element-plus.org/#/en-US/component/select",
          "attributes": [
            {
              "name": "label",
              "description": "name of the group",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether to disable all options in this group",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-option",
          "doc-url": "https://element-plus.org/#/en-US/component/select",
          "attributes": [
            {
              "name": "value",
              "description": "value of option",
              "value": {
                "type": "string | number | object",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label of option, same as `value` if omitted",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether option is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-cascader",
          "description": "If the options have a clear hierarchical structure, Cascader can be used to view and select them.",
          "doc-url": "https://element-plus.org/#/en-US/component/cascader",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | array",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "data of the options，the key of `value` and `label` can be customize by `Props`",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "props",
              "description": "configuration options, see the following table",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "default": "Select",
              "description": "placeholder of input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Cascader is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "false",
              "description": "whether selected value can be cleared",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-all-levels",
              "default": "true",
              "description": "whether to display all levels of the selected value in the input",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapse-tags",
              "default": "false",
              "description": "whether to collapse tags in multiple selection mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "separator",
              "default": "/",
              "description": "option label separator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "filterable",
              "description": "whether the options can be searched",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-method",
              "description": "customize search logic, the first parameter is `node`, the second is `keyword`, and need return a boolean value indicating whether it hits.",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "debounce",
              "default": "300",
              "description": "debounce delay when typing filter keyword, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "before-filter",
              "description": "hook function before filtering with the value to be filtered as its parameter. If `false` is returned or a `Promise` is returned and then is rejected, filtering will be aborted",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for Cascader's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the binding value changes"
            },
            {
              "name": "expand-change",
              "description": "triggers when expand option changes"
            },
            {
              "name": "blur",
              "description": "triggers when Cascader blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Cascader focuses"
            },
            {
              "name": "visible-change",
              "description": "triggers when the dropdown appears/disappears"
            },
            {
              "name": "remove-tag",
              "description": "triggers when remove tag in multiple selection mode"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "the custom content of cascader node, the parameter is { node, data }, which are current Node object and node data respectively",
              "vue-properties": [
                {
                  "name": "node"
                },
                {
                  "name": "data"
                }
              ]
            },
            {
              "name": "empty",
              "description": "content when there is no matched options"
            }
          ]
        },
        {
          "name": "el-cascader-panel",
          "description": "CascaderPanel is the core component of Cascader which has various of features such as single selection, multiple selection, dynamic loading and so on.",
          "doc-url": "https://element-plus.org/#/en-US/component/cascader",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string | number | array",
                "kind": "expression"
              }
            },
            {
              "name": "options",
              "description": "data of the options，the key of `value` and `label` can be customize by `Props`",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "props",
              "description": "configuration options, see the following table",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the binding value changes"
            },
            {
              "name": "expand-change",
              "description": "triggers when expand option changes"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "the custom content of cascader node, the parameter is { node, data }, which are current Node object and node data respectively",
              "vue-properties": [
                {
                  "name": "node"
                },
                {
                  "name": "data"
                }
              ]
            }
          ]
        },
        {
          "name": "el-switch",
          "description": "Switch is used for switching between two opposing states.",
          "doc-url": "https://element-plus.org/#/en-US/component/switch",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value, it should be equivalent to either `active-value` or `inactive-value`, by default it's `boolean` type",
              "value": {
                "type": "boolean | string | number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Switch is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "default": "false",
              "description": "whether Switch is in loading state",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "default": "40",
              "description": "width of Switch",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "active-icon-class",
              "description": "class name of the icon displayed when in `on` state, overrides `active-text`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "inactive-icon-class",
              "description": "class name of the icon displayed when in `off` state, overrides `inactive-text`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "active-text",
              "description": "text displayed when in `on` state",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "inactive-text",
              "description": "text displayed when in `off` state",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "active-value",
              "default": "true",
              "description": "switch value when in `on` state",
              "value": {
                "type": "boolean | string | number",
                "kind": "expression"
              }
            },
            {
              "name": "inactive-value",
              "default": "false",
              "description": "switch value when in `off` state",
              "value": {
                "type": "boolean | string | number",
                "kind": "expression"
              }
            },
            {
              "name": "active-color",
              "default": "#409EFF",
              "description": "background color when in `on` state",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "inactive-color",
              "default": "#C0CCDA",
              "description": "background color when in `off` state",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "input name of Switch",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "validate-event",
              "default": "true",
              "description": "whether to trigger form validation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when value changes"
            }
          ]
        },
        {
          "name": "el-slider",
          "description": "Drag the slider within a fixed range.",
          "doc-url": "https://element-plus.org/#/en-US/component/slider",
          "attributes": [
            {
              "name": "model-value",
              "default": "0",
              "description": "binding value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "min",
              "default": "0",
              "description": "minimum value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "default": "100",
              "description": "maximum value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "default": "1",
              "description": "step size",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Switch is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-input",
              "default": "false",
              "description": "whether to display an input box, works when `range` is false",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-input-controls",
              "default": "true",
              "description": "whether to display control buttons when `show-input` is true",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "input-size",
              "default": "small",
              "description": "size of the input box",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-stops",
              "default": "false",
              "description": "whether to display breakpoints",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-tooltip",
              "default": "true",
              "description": "whether to display tooltip value",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "format-tooltip",
              "description": "format to display tooltip value",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "range",
              "default": "false",
              "description": "whether to select a range",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "vertical",
              "default": "false",
              "description": "vertical mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "height",
              "description": "Slider height, required in vertical mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label for screen reader",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "debounce",
              "default": "300",
              "description": "debounce delay when typing, in milliseconds, works when `show-input` is true",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "tooltip-class",
              "description": "custom class name for the tooltip",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "marks",
              "description": "marks， type of key must be `number` and must in closed interval `[min, max]`, each mark can custom style",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the value changes (if the mouse is being dragged, this event only fires when the mouse is released)"
            },
            {
              "name": "input",
              "description": "triggers when the data changes (It'll be emitted in real time during sliding)"
            }
          ]
        },
        {
          "name": "el-time-picker",
          "description": "Use Time Picker for time input",
          "doc-url": "https://element-plus.org/#/en-US/component/time-picker",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "Date",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "default": "false",
              "description": "whether TimePicker is read only",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether TimePicker is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "default": "true",
              "description": "whether the input is editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "true",
              "description": "whether to show clear button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of Input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder in non-range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "start-placeholder",
              "description": "placeholder for the start time in range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "end-placeholder",
              "description": "placeholder for the end time in range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "is-range",
              "default": "false",
              "description": "whether to pick a time range",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "arrow-control",
              "default": "false",
              "description": "whether to pick time using arrow buttons",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "default": "left",
              "description": "alignment",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for TimePicker's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "range-separator",
              "description": "range separator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "optional, default date of the calendar",
              "value": {
                "type": "Date | string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-icon",
              "default": "el-icon-time",
              "description": "Custom prefix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clear-icon",
              "default": "el-icon-circle-close",
              "description": "Custom clear icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-hours",
              "description": "To specify the array of hours that cannot be selected",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-minutes",
              "description": "To specify the array of minutes that cannot be selected",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-seconds",
              "description": "To specify the array of seconds that cannot be selected",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when user confirms the value"
            },
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            }
          ]
        },
        {
          "name": "el-time-select",
          "description": "Use Time Select for time input",
          "doc-url": "https://element-plus.org/#/en-US/component/time-select",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "default": "true",
              "description": "whether the input is editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "true",
              "description": "whether to show clear button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of Input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder in non-range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-icon",
              "default": "el-icon-time",
              "description": "Custom prefix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clear-icon",
              "default": "el-icon-circle-close",
              "description": "Custom clear icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "start",
              "default": "09:00",
              "description": "start time",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "end",
              "default": "18:00",
              "description": "end time",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "step",
              "default": "00:30",
              "description": "time step",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "min-time",
              "default": "00:00",
              "description": "minimum time, any time before this time will be disabled",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "maxTime",
              "description": "maximum time, any time after this time will be disabled",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when user confirms the value"
            },
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            }
          ]
        },
        {
          "name": "el-date-picker",
          "description": "Use Date Picker for date input",
          "doc-url": "https://element-plus.org/#/en-US/component/date-picker",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "Date | array",
                "kind": "expression"
              }
            },
            {
              "name": "readonly",
              "default": "false",
              "description": "whether DatePicker is read only",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether DatePicker is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "default": "true",
              "description": "whether the input is editable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "clearable",
              "default": "true",
              "description": "whether to show clear button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of Input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "placeholder",
              "description": "placeholder in non-range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "start-placeholder",
              "description": "placeholder for the start time in range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "end-placeholder",
              "description": "placeholder for the end time in range mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "default": "date",
              "description": "type of the picker",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "default": "YYYY-MM-DD",
              "description": "format of the displayed value in the input box",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "default": "left",
              "description": "alignment",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for DatePickers dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "range-separator",
              "description": "range separator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-value",
              "description": "optional, default date of the calendar",
              "value": {
                "type": "Date",
                "kind": "expression"
              }
            },
            {
              "name": "default-time",
              "description": "optional, the time value to use when selecting date range",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "description": "same as `name` in native input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "unlink-panels",
              "default": "false",
              "description": "unlink two date-panels in range-picker",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "prefix-icon",
              "default": "el-icon-time",
              "description": "Custom prefix icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "clear-icon",
              "default": "el-icon-circle-close",
              "description": "Custom clear icon class",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "validate-event",
              "default": "true",
              "description": "whether to trigger form validation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-date",
              "description": "a function determining if a date is disabled with that date as its parameter. Should return a Boolean",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "shortcuts",
              "description": "an object array to set shortcut options",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when user confirms the value"
            },
            {
              "name": "blur",
              "description": "triggers when Input blurs"
            },
            {
              "name": "focus",
              "description": "triggers when Input focuses"
            }
          ],
          "slots": [
            {
              "name": "range-separator",
              "description": "custom range separator content"
            }
          ]
        },
        {
          "name": "el-upload",
          "description": "Upload files by clicking or drag-and-drop",
          "doc-url": "https://element-plus.org/#/en-US/component/upload",
          "attributes": [
            {
              "name": "action",
              "description": "required, request URL",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "headers",
              "description": "request headers",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "multiple",
              "description": "whether uploading multiple files is permitted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "description": "additions options of request",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "default": "file",
              "description": "key name for uploaded file",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "with-credentials",
              "default": "false",
              "description": "whether cookies are sent",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-file-list",
              "default": "true",
              "description": "whether to show the uploaded file list",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "drag",
              "default": "false",
              "description": "whether to activate drag and drop mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "accept",
              "description": "accepted file types, will not work when `thumbnail-mode` is `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "on-preview",
              "description": "hook function when clicking the uploaded files",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "on-remove",
              "description": "hook function when files are removed",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "on-success",
              "description": "hook function when uploaded successfully",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "on-error",
              "description": "hook function when some errors occurs",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "on-progress",
              "description": "hook function when some progress occurs",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "on-change",
              "description": "hook function when select file or upload file success or upload file fail",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "before-upload",
              "description": "hook function before uploading with the file to be uploaded as its parameter. If `false` is returned or a `Promise` is returned and then is rejected, uploading will be aborted",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "before-remove",
              "description": "hook function before removing a file with the file and file list as its parameters. If `false` is returned or a `Promise` is returned and then is rejected, removing will be aborted.",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "thumbnail-mode",
              "default": "false",
              "description": "whether thumbnail is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "file-list",
              "default": "[]",
              "description": "default uploaded files, e.g. [{name: 'food.jpg', url: 'https://xxx.cdn.com/xxx.jpg'}]",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "list-type",
              "default": "text",
              "description": "type of fileList",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "auto-upload",
              "default": "true",
              "description": "whether to auto upload file",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "http-request",
              "description": "override default xhr behavior, allowing you to implement your own upload-file's request",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether to disable upload",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "limit",
              "description": "maximum number of uploads allowed",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "on-exceed",
              "description": "hook function when limit is exceeded",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "trigger",
              "description": "content which triggers file dialog"
            },
            {
              "name": "tip",
              "description": "content of tips"
            }
          ]
        },
        {
          "name": "el-rate",
          "description": "Used for rating",
          "doc-url": "https://element-plus.org/#/en-US/component/rate",
          "attributes": [
            {
              "name": "model-value",
              "default": "0",
              "description": "binding value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "default": "5",
              "description": "max rating score",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Rate is read-only",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-half",
              "default": "false",
              "description": "whether picking half start is allowed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "low-threshold",
              "default": "2",
              "description": "threshold value between low and medium level. The value itself will be included in low level",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "high-threshold",
              "default": "4",
              "description": "threshold value between medium and high level. The value itself will be included in high level",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "colors",
              "default": "['#F7BA2A', '#F7BA2A', '#F7BA2A']",
              "description": "colors for icons. If array, it should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding color",
              "value": {
                "type": "array|object",
                "kind": "expression"
              }
            },
            {
              "name": "void-color",
              "default": "#C6D1DE",
              "description": "color of unselected icons",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-void-color",
              "default": "#EFF2F7",
              "description": "color of unselected read-only icons",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "icon-classes",
              "default": "['el-icon-star-on', 'el-icon-star-on','el-icon-star-on']",
              "description": "class names of icons. If array, ot should have 3 elements, each of which corresponds with a score level, else if object, the key should be threshold value between two levels, and the value should be corresponding icon class",
              "value": {
                "type": "array|object",
                "kind": "expression"
              }
            },
            {
              "name": "void-icon-class",
              "default": "el-icon-star-off",
              "description": "class name of unselected icons",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled-void-icon-class",
              "default": "el-icon-star-on",
              "description": "class name of unselected read-only icons",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-text",
              "default": "false",
              "description": "whether to display texts",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-score",
              "default": "false",
              "description": "whether to display current score. show-score and show-text cannot be true at the same time",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "text-color",
              "default": "#1F2D3D",
              "description": "color of texts",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "texts",
              "default": "['Extremely bad','Disappointed','Fair','Satisfied','Surprise']",
              "description": "text array",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "score-template",
              "default": "{value}",
              "description": "score template",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Triggers when rate value is changed"
            }
          ]
        },
        {
          "name": "el-color-picker",
          "description": "Use Color Picker for color input",
          "doc-url": "https://element-plus.org/#/en-US/component/color-picker",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether to disable the ColorPicker",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of ColorPicker",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-alpha",
              "default": "false",
              "description": "whether to display the alpha slider",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "color-format",
              "default": "hex (when show-alpha is false)/ rgb (when show-alpha is true)",
              "description": "color format of v-model",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for ColorPicker's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "predefine",
              "description": "predefined color options",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when input value changes"
            },
            {
              "name": "active-change",
              "description": "triggers when the current active color changes"
            }
          ]
        },
        {
          "name": "el-transfer",
          "doc-url": "https://element-plus.org/#/en-US/component/transfer",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "data",
              "default": "[ ]",
              "description": "data source",
              "value": {
                "type": "array[{ key, label, disabled }]",
                "kind": "expression"
              }
            },
            {
              "name": "filterable",
              "default": "false",
              "description": "whether Transfer is filterable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-placeholder",
              "default": "Enter keyword",
              "description": "placeholder for the filter input",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "filter-method",
              "description": "custom filter method",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "target-order",
              "default": "original",
              "description": "order strategy for elements in the target list. If set to `original`, the elements will keep the same order as the data source. If set to `push`, the newly added elements will be pushed to the bottom. If set to `unshift`, the newly added elements will be inserted on the top",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "titles",
              "default": "['List 1', 'List 2']",
              "description": "custom list titles",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "button-texts",
              "default": "[ ]",
              "description": "custom button texts",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "render-content",
              "description": "custom render function for data items",
              "value": {
                "type": "function(h, option)",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "default": "{ noChecked: '${checked}/${total}', hasChecked: '${checked}/${total}' }",
              "description": "texts for checking status in list header",
              "value": {
                "type": "object{noChecked, hasChecked}",
                "kind": "expression"
              }
            },
            {
              "name": "props",
              "description": "prop aliases for data source",
              "value": {
                "type": "object{key, label, disabled}",
                "kind": "expression"
              }
            },
            {
              "name": "left-default-checked",
              "default": "[ ]",
              "description": "key array of initially checked data items of the left list",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "right-default-checked",
              "default": "[ ]",
              "description": "key array of initially checked data items of the right list",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when data items change in the right list"
            },
            {
              "name": "left-check-change",
              "description": "triggers when end user changes the checked state of any data item in the left list"
            },
            {
              "name": "right-check-change",
              "description": "triggers when end user changes the checked state of any data item in the right list"
            }
          ],
          "slots": [
            {
              "name": "left-footer",
              "description": "content of left list footer"
            },
            {
              "name": "right-footer",
              "description": "content of right list footer"
            },
            {
              "name": "—",
              "description": "Custom content for data items. The scope parameter is { option }"
            }
          ]
        },
        {
          "name": "el-form",
          "description": "Form consists of `input`, `radio`, `select`, `checkbox` and so on. With form, you can collect, verify and submit data.",
          "doc-url": "https://element-plus.org/#/en-US/component/form",
          "attributes": [
            {
              "name": "model",
              "description": "data of form component",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "rules",
              "description": "validation rules of form",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "inline",
              "default": "false",
              "description": "whether the form is inline",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "label-position",
              "default": "right",
              "description": "position of label. If set to 'left' or 'right', `label-width` prop is also required",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label-width",
              "description": "width of label, e.g. '50px'. All its direct child form items will inherit this value. Width `auto` is supported.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label-suffix",
              "description": "suffix of the label",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-required-asterisk",
              "default": "false",
              "description": "whether required fields should have a red asterisk (star) beside their labels",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-message",
              "default": "true",
              "description": "whether to show the error message",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "inline-message",
              "default": "false",
              "description": "whether to display the error message inline with the form item",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "status-icon",
              "default": "false",
              "description": "whether to display an icon indicating the validation result",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "validate-on-rule-change",
              "default": "true",
              "description": "whether to trigger validation when the `rules` prop is changed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "control the size of components in this form",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether to disabled all components in this form. If set to true, it cannot be overridden by its inner components' `disabled` prop",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "validate",
              "description": "triggers after a form item is validated"
            }
          ]
        },
        {
          "name": "el-form-item",
          "doc-url": "https://element-plus.org/#/en-US/component/form",
          "attributes": [
            {
              "name": "prop",
              "description": "a key of `model`. In the use of validate and resetFields method, the attribute is required",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "label",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label-width",
              "description": "width of label, e.g. '50px'. Width `auto` is supported.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "required",
              "default": "false",
              "description": "whether the field is required or not, will be determined by validation rules if omitted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "rules",
              "description": "validation rules of form",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "error",
              "description": "field error message, set its value and the field will validate error and show this message immediately",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-message",
              "default": "true",
              "description": "whether to show the error message",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "inline-message",
              "default": "false",
              "description": "inline style validate message",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "control the size of components in this form-item",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "content of Form Item"
            },
            {
              "name": "label",
              "description": "content of label"
            }
          ]
        },
        {
          "name": "el-table",
          "description": "Display multiple data with similar format. You can sort, filter, compare your data in a table.",
          "doc-url": "https://element-plus.org/#/en-US/component/table",
          "attributes": [
            {
              "name": "data",
              "description": "Table data",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "height",
              "description": "Table's height. By default it has an `auto` height. If its value is a number, the height is measured in pixels; if its value is a string, the value will be assigned to element's style.height, the height is affected by external styles",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "max-height",
              "description": "Table's max-height. The legal value is a number or the height in px.",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "stripe",
              "default": "false",
              "description": "whether Table is striped",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "border",
              "default": "false",
              "description": "whether Table has vertical border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "size of Table",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fit",
              "default": "true",
              "description": "whether width of column automatically fits its container",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-header",
              "default": "true",
              "description": "whether Table header is visible",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "highlight-current-row",
              "default": "false",
              "description": "whether current row is highlighted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "current-row-key",
              "description": "key of current row, a set only prop",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "row-class-name",
              "description": "function that returns custom class names for a row, or a string assigning class names for every row",
              "value": {
                "type": "Function({row, rowIndex})|String",
                "kind": "expression"
              }
            },
            {
              "name": "row-style",
              "description": "function that returns custom style for a row, or an object assigning custom style for every row",
              "value": {
                "type": "Function({row, rowIndex})|Object",
                "kind": "expression"
              }
            },
            {
              "name": "cell-class-name",
              "description": "function that returns custom class names for a cell, or a string assigning class names for every cell",
              "value": {
                "type": "Function({row, column, rowIndex, columnIndex})|String",
                "kind": "expression"
              }
            },
            {
              "name": "cell-style",
              "description": "function that returns custom style for a cell, or an object assigning custom style for every cell",
              "value": {
                "type": "Function({row, column, rowIndex, columnIndex})|Object",
                "kind": "expression"
              }
            },
            {
              "name": "header-row-class-name",
              "description": "function that returns custom class names for a row in table header, or a string assigning class names for every row in table header",
              "value": {
                "type": "Function({row, rowIndex})|String",
                "kind": "expression"
              }
            },
            {
              "name": "header-row-style",
              "description": "function that returns custom style for a row in table header, or an object assigning custom style for every row in table header",
              "value": {
                "type": "Function({row, rowIndex})|Object",
                "kind": "expression"
              }
            },
            {
              "name": "header-cell-class-name",
              "description": "function that returns custom class names for a cell in table header, or a string assigning class names for every cell in table header",
              "value": {
                "type": "Function({row, column, rowIndex, columnIndex})|String",
                "kind": "expression"
              }
            },
            {
              "name": "header-cell-style",
              "description": "function that returns custom style for a cell in table header, or an object assigning custom style for every cell in table header",
              "value": {
                "type": "Function({row, column, rowIndex, columnIndex})|Object",
                "kind": "expression"
              }
            },
            {
              "name": "row-key",
              "description": "key of row data, used for optimizing rendering. Required if `reserve-selection` is on or display tree data. When its type is String, multi-level access is supported, e.g. `user.info.id`, but `user.info[0].id` is not supported, in which case `Function` should be used.",
              "value": {
                "type": "Function(row)|String",
                "kind": "expression"
              }
            },
            {
              "name": "empty-text",
              "default": "No Data",
              "description": "Displayed text when data is empty. You can customize this area with `#empty`",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-all",
              "default": "false",
              "description": "whether expand all rows by default, works when the table has a column type=\"expand\" or contains tree structure data",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "expand-row-keys",
              "default": "",
              "description": "set expanded rows by this prop, prop's value is the keys of expand rows, you should set row-key before using this prop",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            },
            {
              "name": "default-sort",
              "default": "if `prop` is set, and `order` is not set, then `order` is default to ascending",
              "description": "set the default sort column and order. property `prop` is used to set default sort column, property `order` is used to set default sort order",
              "value": {
                "type": "Object",
                "kind": "expression"
              }
            },
            {
              "name": "tooltip-effect",
              "default": "",
              "description": "tooltip `effect` property",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "show-summary",
              "default": "false",
              "description": "whether to display a summary row",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "sum-text",
              "default": "Sum",
              "description": "displayed text for the first column of summary row",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "summary-method",
              "description": "custom summary method",
              "value": {
                "type": "Function({ columns, data })",
                "kind": "expression"
              }
            },
            {
              "name": "span-method",
              "description": "method that returns rowspan and colspan",
              "value": {
                "type": "Function({ row, column, rowIndex, columnIndex })",
                "kind": "expression"
              }
            },
            {
              "name": "select-on-indeterminate",
              "default": "true",
              "description": "controls the behavior of master checkbox in multi-select tables when only some rows are selected (but not all). If true, all rows will be selected, else deselected.",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "indent",
              "default": "16",
              "description": "horizontal indentation of tree data",
              "value": {
                "type": "Number",
                "kind": "expression"
              }
            },
            {
              "name": "lazy",
              "description": "whether to lazy loading data",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load",
              "description": "method for loading child row data, only works when `lazy` is true",
              "value": {
                "type": "Function(row, treeNode, resolve)",
                "kind": "expression"
              }
            },
            {
              "name": "tree-props",
              "default": "{ hasChildren: 'hasChildren', children: 'children' }",
              "description": "configuration for rendering nested data",
              "value": {
                "type": "Object",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "select",
              "description": "triggers when user clicks the checkbox in a row"
            },
            {
              "name": "select-all",
              "description": "triggers when user clicks the checkbox in table header"
            },
            {
              "name": "selection-change",
              "description": "triggers when selection changes"
            },
            {
              "name": "cell-mouse-enter",
              "description": "triggers when hovering into a cell"
            },
            {
              "name": "cell-mouse-leave",
              "description": "triggers when hovering out of a cell"
            },
            {
              "name": "cell-click",
              "description": "triggers when clicking a cell"
            },
            {
              "name": "cell-dblclick",
              "description": "triggers when double clicking a cell"
            },
            {
              "name": "row-click",
              "description": "triggers when clicking a row"
            },
            {
              "name": "row-contextmenu",
              "description": "triggers when user right clicks on a row"
            },
            {
              "name": "row-dblclick",
              "description": "triggers when double clicking a row"
            },
            {
              "name": "header-click",
              "description": "triggers when clicking a column header"
            },
            {
              "name": "header-contextmenu",
              "description": "triggers when user right clicks on a column header"
            },
            {
              "name": "sort-change",
              "description": "triggers when Table's sorting changes"
            },
            {
              "name": "filter-change",
              "description": "column's key. If you need to use the filter-change event, this attribute is mandatory to identify which column is being filtered"
            },
            {
              "name": "current-change",
              "description": "triggers when current row changes"
            },
            {
              "name": "header-dragend",
              "description": "triggers after changing a column's width by dragging the column header's border"
            },
            {
              "name": "expand-change",
              "description": "triggers when user expands or collapses a row (for expandable table, second param is expandedRows; for tree Table, second param is expanded)"
            }
          ],
          "slots": [
            {
              "name": "append",
              "description": "Contents to be inserted after the last row. You may need this slot if you want to implement infinite scroll for the table. This slot will be displayed above the summary row if there is one."
            }
          ]
        },
        {
          "name": "el-table-column",
          "doc-url": "https://element-plus.org/#/en-US/component/table",
          "attributes": [
            {
              "name": "type",
              "description": "type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "index",
              "description": "customize indices for each row, works on columns with `type=index`",
              "value": {
                "type": "number|Function(index)",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "column label",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "column-key",
              "description": "column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prop",
              "description": "field name. You can also use its alias: `property`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "description": "column width",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "min-width",
              "description": "column minimum width. Columns with `width` has a fixed width, while columns with `min-width` has a width that is distributed in proportion",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fixed",
              "description": "whether column is fixed at left/right. Will be fixed at left if `true`",
              "value": {
                "type": "string|boolean",
                "kind": "expression"
              }
            },
            {
              "name": "render-header",
              "description": "render function for table header of this column",
              "value": {
                "type": "Function({ column, $index })",
                "kind": "expression"
              }
            },
            {
              "name": "sortable",
              "default": "false",
              "description": "whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the `sort-change` event of Table",
              "value": {
                "type": "boolean, string",
                "kind": "expression"
              }
            },
            {
              "name": "sort-method",
              "description": "sorting method, works when `sortable` is `true`. Should return a number, just like Array.sort",
              "value": {
                "type": "Function(a, b)",
                "kind": "expression"
              }
            },
            {
              "name": "sort-by",
              "description": "specify which property to sort by, works when `sortable` is `true` and `sort-method` is `undefined`. If set to an Array, the column will sequentially sort by the next property if the previous one is equal",
              "value": {
                "type": "Function(row, index)|String|Array",
                "kind": "expression"
              }
            },
            {
              "name": "sort-orders",
              "default": "['ascending', 'descending', null]",
              "description": "the order of the sorting strategies used when sorting the data, works when `sortable` is `true`. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "resizable",
              "default": "false",
              "description": "whether column width can be resized, works when `border` of `el-table` is `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "formatter",
              "description": "function that formats cell content",
              "value": {
                "type": "Function(row, column, cellValue, index)",
                "kind": "expression"
              }
            },
            {
              "name": "show-overflow-tooltip",
              "default": "false",
              "description": "whether to hide extra content and show them in a tooltip when hovering on the cell",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "align",
              "default": "left",
              "description": "alignment",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "header-align",
              "description": "alignment of the table header. If omitted, the value of the above `align` attribute will be applied",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "class-name",
              "description": "class name of cells in the column",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label-class-name",
              "description": "class name of the label of this column",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "selectable",
              "description": "function that determines if a certain row can be selected, works when `type` is 'selection'",
              "value": {
                "type": "Function(row, index)",
                "kind": "expression"
              }
            },
            {
              "name": "reserve-selection",
              "default": "false",
              "description": "whether to reserve selection after data refreshing, works when `type` is 'selection'. Note that `row-key` is required for this to work",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filters",
              "description": "an array of data filtering options. For each element in this array, `text` and `value` are required",
              "value": {
                "type": "Array[{ text, value }]",
                "kind": "expression"
              }
            },
            {
              "name": "filter-placement",
              "description": "placement for the filter dropdown",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "filter-multiple",
              "default": "true",
              "description": "whether data filtering supports multiple options",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "filter-method",
              "description": "data filtering method. If `filter-multiple` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns `true`",
              "value": {
                "type": "Function(value, row, column)",
                "kind": "expression"
              }
            },
            {
              "name": "filtered-value",
              "description": "filter value for selected data, might be useful when table header is rendered with `render-header`",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "Custom content for table columns. The scope parameter is { row, column, $index }"
            },
            {
              "name": "header",
              "description": "Custom content for table header. The scope parameter is { column, $index }"
            }
          ]
        },
        {
          "name": "el-tag",
          "description": "Used for marking and selection.",
          "doc-url": "https://element-plus.org/#/en-US/component/tag",
          "attributes": [
            {
              "name": "type",
              "description": "component type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "default": "false",
              "description": "whether Tag can be removed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disable-transitions",
              "default": "false",
              "description": "whether to disable animations",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hit",
              "default": "false",
              "description": "whether Tag has a highlighted border",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "description": "background color of the Tag",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "tag size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "effect",
              "default": "light",
              "description": "component theme",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "triggers when Tag is clicked"
            },
            {
              "name": "close",
              "description": "triggers when Tag is removed"
            }
          ]
        },
        {
          "name": "el-check-tag",
          "description": "Light weighted checkbox with tag appearance",
          "doc-url": "https://element-plus.org/#/en-US/component/tag",
          "attributes": [
            {
              "name": "checked",
              "default": "-",
              "description": "whether the tag is selected",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when check tag checked state change"
            }
          ]
        },
        {
          "name": "el-progress",
          "description": "Progress is used to show the progress of current operation, and inform the user the current status.",
          "doc-url": "https://element-plus.org/#/en-US/component/progress",
          "attributes": [
            {
              "name": "percentage",
              "default": "0",
              "description": "percentage, **required**",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "default": "line",
              "description": "the type of progress bar",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "stroke-width",
              "default": "6",
              "description": "the width of progress bar",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "text-inside",
              "default": "false",
              "description": "whether to place the percentage inside progress bar, only works when `type` is 'line'",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "the current status of progress bar",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "default": "''",
              "description": "background color of progress bar. Overrides `status` prop",
              "value": {
                "type": "string/function/array",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "default": "126",
              "description": "the canvas width of circle progress bar",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "show-text",
              "default": "true",
              "description": "whether to show percentage",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "stroke-linecap",
              "default": "round",
              "description": "circle/dashboard type shape at the end path",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "format",
              "description": "custom text format",
              "value": {
                "type": "function(percentage)",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Customized content, parameter is { percentage }"
            }
          ]
        },
        {
          "name": "el-tree",
          "description": "Display a set of data with hierarchies.",
          "doc-url": "https://element-plus.org/#/en-US/component/tree",
          "attributes": [
            {
              "name": "data",
              "description": "tree data",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "empty-text",
              "description": "text displayed when data is void",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "node-key",
              "description": "unique identity key name for nodes, its value should be unique across the whole tree",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "props",
              "description": "configuration options, see the following table",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "render-after-expand",
              "default": "true",
              "description": "whether to render child nodes only after a parent node is expanded for the first time",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "load",
              "description": "method for loading subtree data, only works when `lazy` is true",
              "value": {
                "type": "function(node, resolve)",
                "kind": "expression"
              }
            },
            {
              "name": "render-content",
              "description": "render function for tree node",
              "value": {
                "type": "Function(h, { node, data, store }",
                "kind": "expression"
              }
            },
            {
              "name": "highlight-current",
              "default": "false",
              "description": "whether current node is highlighted",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-expand-all",
              "default": "false",
              "description": "whether to expand all nodes by default",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "expand-on-click-node",
              "default": "true",
              "description": "whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "check-on-click-node",
              "default": "false",
              "description": "whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "auto-expand-parent",
              "default": "true",
              "description": "whether to expand father node when a child node is expanded",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-expanded-keys",
              "description": "array of keys of initially expanded nodes",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "show-checkbox",
              "default": "false",
              "description": "whether node is selectable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "check-strictly",
              "default": "false",
              "description": "whether checked state of a node not affects its father and child nodes when `show-checkbox` is `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "default-checked-keys",
              "description": "array of keys of initially checked nodes",
              "value": {
                "type": "array",
                "kind": "expression"
              }
            },
            {
              "name": "current-node-key",
              "description": "key of initially selected node",
              "value": {
                "type": "string, number",
                "kind": "expression"
              }
            },
            {
              "name": "filter-node-method",
              "description": "this function will be executed on each node when use filter method. if return `false`, tree node will be hidden.",
              "value": {
                "type": "Function(value, data, node)",
                "kind": "expression"
              }
            },
            {
              "name": "accordion",
              "default": "false",
              "description": "whether only one node among the same level can be expanded at one time",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "indent",
              "default": "16",
              "description": "horizontal indentation of nodes in adjacent levels in pixels",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "icon-class",
              "description": "custome tree node icon",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "lazy",
              "default": "false",
              "description": "whether to lazy load leaf node, used with `load` attribute",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "draggable",
              "default": "false",
              "description": "whether enable tree nodes drag and drop",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "allow-drag",
              "description": "this function will be executed before dragging a node. If `false` is returned, the node can not be dragged",
              "value": {
                "type": "Function(node)",
                "kind": "expression"
              }
            },
            {
              "name": "allow-drop",
              "description": "this function will be executed before the dragging node is dropped. If `false` is returned, the dragging node can not be dropped at the target node. `type` has three possible values: 'prev' (inserting the dragging node before the target node), 'inner' (inserting the dragging node to the target node) and 'next' (inserting the dragging node after the target node)",
              "value": {
                "type": "Function(draggingNode, dropNode, type)",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "node-click",
              "description": "triggers when a node is clicked"
            },
            {
              "name": "node-contextmenu",
              "description": "triggers when a node is clicked by right button"
            },
            {
              "name": "check-change",
              "description": "triggers when the selected state of the node changes"
            },
            {
              "name": "check",
              "description": "triggers after clicking the checkbox of a node"
            },
            {
              "name": "current-change",
              "description": "triggers when current node changes"
            },
            {
              "name": "node-expand",
              "description": "triggers when current node open"
            },
            {
              "name": "node-collapse",
              "description": "triggers when current node close"
            },
            {
              "name": "node-drag-start",
              "description": "triggers when dragging starts"
            },
            {
              "name": "node-drag-enter",
              "description": "triggers when the dragging node enters another node"
            },
            {
              "name": "node-drag-leave",
              "description": "triggers when the dragging node leaves a node"
            },
            {
              "name": "node-drag-over",
              "description": "triggers when dragging over a node (like mouseover event)"
            },
            {
              "name": "node-drag-end",
              "description": "triggers when dragging ends"
            },
            {
              "name": "node-drop",
              "description": "triggers after the dragging node is dropped"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "Custom content for tree nodes. The scope parameter is { node, data }"
            }
          ]
        },
        {
          "name": "el-pagination",
          "description": "If you have too much data to display in one page, use pagination.",
          "doc-url": "https://element-plus.org/#/en-US/component/pagination",
          "attributes": [
            {
              "name": "small",
              "default": "false",
              "description": "whether to use small pagination",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "background",
              "default": "false",
              "description": "whether the buttons have a background color",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "page-size",
              "default": "10",
              "description": "item count of each page, supports the .sync modifier",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "total",
              "description": "total item count",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "page-count",
              "description": "total page count. Set either `total` or `page-count` and pages will be displayed; if you need `page-sizes`, `total` is required",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "pager-count",
              "default": "7",
              "description": "number of pagers. Pagination collapses when the total page count exceeds this value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "current-page",
              "default": "1",
              "description": "current page number, supports the .sync modifier",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "layout",
              "default": "'prev, pager, next, jumper, ->, total'",
              "description": "layout of Pagination, elements separated with a comma",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "page-sizes",
              "default": "[10, 20, 30, 40, 50, 100]",
              "description": "options of item count per page",
              "value": {
                "type": "number[]",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for the page size Select's dropdown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "prev-text",
              "description": "text for the prev button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "next-text",
              "description": "text for the next button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Pagination is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-single-page",
              "description": "whether to hide when there's only one page",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "size-change",
              "description": "triggers when `page-size` changes"
            },
            {
              "name": "current-change",
              "description": "triggers when `current-page` changes"
            },
            {
              "name": "prev-click",
              "description": "triggers when the prev button is clicked and current page changes"
            },
            {
              "name": "next-click",
              "description": "triggers when the next button is clicked and current page changes"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "custom content. To use this, you need to declare `slot` in `layout`"
            }
          ]
        },
        {
          "name": "el-badge",
          "description": "A number or status mark on buttons and icons.",
          "doc-url": "https://element-plus.org/#/en-US/component/badge",
          "attributes": [
            {
              "name": "value",
              "description": "display value",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "max",
              "description": "maximum value, shows '{max}+' when exceeded. Only works if `value` is a `Number`",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "is-dot",
              "default": "false",
              "description": "if a little dot is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hidden",
              "default": "false",
              "description": "hidden badge",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "button type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-skeleton",
          "description": "When loading data, and you need a rich experience for visual and interactions for your end users",
          "doc-url": "https://element-plus.org/#/en-US/component/skeleton",
          "attributes": [
            {
              "name": "animated",
              "default": "false",
              "description": "whether showing the animation",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "count",
              "default": "1",
              "description": "how many fake items to render to the DOM",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "loading",
              "default": "false",
              "description": "whether showing the real DOM",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "rows",
              "default": "3",
              "description": "numbers of the row, only useful when no template slot were given",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "throttle",
              "default": "0",
              "description": "Rendering delay in millseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Real rendering DOM"
            },
            {
              "name": "template",
              "description": "Custom rendering skeleton template"
            }
          ]
        },
        {
          "name": "el-skeleton-item",
          "doc-url": "https://element-plus.org/#/en-US/component/skeleton",
          "attributes": [
            {
              "name": "variant",
              "default": "text",
              "description": "The current rendering skeleton type",
              "value": {
                "type": "Enum(string)",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-empty",
          "description": "Placeholder hints for empty states",
          "doc-url": "https://element-plus.org/#/en-US/component/empty",
          "attributes": [
            {
              "name": "image",
              "description": "image URL",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "image-size",
              "description": "image size (width)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "description",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Custom bottom content"
            },
            {
              "name": "image",
              "description": "Custom image"
            },
            {
              "name": "description",
              "description": "Custom description"
            }
          ]
        },
        {
          "name": "el-alert",
          "description": "Displays important alert messages.",
          "doc-url": "https://element-plus.org/#/en-US/component/alert",
          "attributes": [
            {
              "name": "title",
              "description": "title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "default": "info",
              "description": "Component type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "Descriptive text. Can also be passed with the default slot",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "default": "true",
              "description": "If closable or not",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "center",
              "default": "false",
              "description": "Whether to center the text",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "close-text",
              "description": "Customized close button text",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-icon",
              "default": "false",
              "description": "If a type icon is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "effect",
              "default": "light",
              "description": "Choose theme",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "fires when alert is closed"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "description"
            },
            {
              "name": "title",
              "description": "content of the Alert title"
            }
          ]
        },
        {
          "name": "el-affix",
          "description": "Fix the element to a specific visible area.",
          "doc-url": "https://element-plus.org/#/en-US/component/affix",
          "attributes": [
            {
              "name": "offset",
              "default": "0",
              "description": "offset distance",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "position",
              "default": "top",
              "description": "position of affix",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "target",
              "description": "target container (CSS selector)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "z-index",
              "default": "100",
              "description": "z-index of affix",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when fixed state changed"
            },
            {
              "name": "scroll",
              "description": "triggers when scrolling"
            }
          ]
        },
        {
          "name": "el-menu",
          "description": "Menu that provides navigation for your website",
          "doc-url": "https://element-plus.org/#/en-US/component/menu",
          "attributes": [
            {
              "name": "mode",
              "default": "vertical",
              "description": "menu display mode",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "collapse",
              "default": "false",
              "description": "whether the menu is collapsed (available only in vertical mode)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "background-color",
              "default": "#ffffff",
              "description": "background color of Menu (hex format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "text-color",
              "default": "#303133",
              "description": "text color of Menu (hex format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "active-text-color",
              "default": "#409EFF",
              "description": "text color of currently active menu item (hex format)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-active",
              "description": "index of currently active menu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "default-openeds",
              "description": "array that contains indexes of currently active sub-menus",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            },
            {
              "name": "unique-opened",
              "default": "false",
              "description": "whether only one sub-menu can be active",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "menu-trigger",
              "default": "hover",
              "description": "how sub-menus are triggered, only works when `mode` is 'horizontal'",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "router",
              "default": "false",
              "description": "whether `vue-router` mode is activated. If true, index will be used as 'path' to activate the route action",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "collapse-transition",
              "default": "true",
              "description": "whether to enable the collapse transition",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "select",
              "description": "callback function when menu is activated"
            },
            {
              "name": "open",
              "description": "callback function when sub-menu expands"
            },
            {
              "name": "close",
              "description": "callback function when sub-menu collapses"
            }
          ]
        },
        {
          "name": "el-submenu",
          "doc-url": "https://element-plus.org/#/en-US/component/menu",
          "attributes": [
            {
              "name": "index",
              "description": "unique identification",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for the popup menu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-timeout",
              "default": "300",
              "description": "timeout before showing a sub-menu",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "hide-timeout",
              "default": "300",
              "description": "timeout before hiding a sub-menu",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the sub-menu is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-append-to-body",
              "default": "level one Submenu: true / other Submenus: false",
              "description": "whether to append the popup menu to body. If the positioning of the menu is wrong, you can try setting this prop",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-menu-item",
          "doc-url": "https://element-plus.org/#/en-US/component/menu",
          "attributes": [
            {
              "name": "index",
              "default": "null",
              "description": "unique identification",
              "value": {
                "type": "string|null",
                "kind": "expression"
              }
            },
            {
              "name": "route",
              "description": "Vue Router object",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "callback function when menu-item is clicked"
            }
          ]
        },
        {
          "name": "el-menu-item-group",
          "doc-url": "https://element-plus.org/#/en-US/component/menu",
          "attributes": [
            {
              "name": "title",
              "description": "group title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-tabs",
          "description": "Divide data collections which are related yet belong to different types.",
          "doc-url": "https://element-plus.org/#/en-US/component/tabs",
          "attributes": [
            {
              "name": "model-value",
              "default": "name of first tab",
              "description": "binding value, name of the selected tab",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "type of Tab",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "default": "false",
              "description": "whether Tab is closable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "addable",
              "default": "false",
              "description": "whether Tab is addable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "editable",
              "default": "false",
              "description": "whether Tab is addable and closable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tab-position",
              "default": "top",
              "description": "position of tabs",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "stretch",
              "default": "false",
              "description": "whether width of tab automatically fits its container",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "before-leave",
              "description": "hook function before switching tab. If `false` is returned or a `Promise` is returned and then is rejected, switching will be prevented",
              "value": {
                "type": "Function(activeName, oldActiveName)",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "tab-click",
              "description": "triggers when a tab is clicked"
            },
            {
              "name": "tab-remove",
              "description": "triggers when tab-remove button is clicked"
            },
            {
              "name": "tab-add",
              "description": "triggers when tab-add button is clicked"
            },
            {
              "name": "edit",
              "description": "triggers when tab-add button or tab-remove is clicked"
            }
          ]
        },
        {
          "name": "el-tab-pane",
          "doc-url": "https://element-plus.org/#/en-US/component/tabs",
          "attributes": [
            {
              "name": "label",
              "description": "title of the tab",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Tab is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "name",
              "default": "ordinal number of the tab-pane in the sequence, e.g. the first tab-pane is '1'",
              "description": "identifier corresponding to the name of Tabs, representing the alias of the tab-pane",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "closable",
              "default": "false",
              "description": "whether Tab is closable",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "lazy",
              "default": "false",
              "description": "whether Tab is lazily rendered",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "label",
              "description": "Tab-pane's label"
            }
          ]
        },
        {
          "name": "el-breadcrumb",
          "description": "Displays the location of the current page, making it easier to browser back.",
          "doc-url": "https://element-plus.org/#/en-US/component/breadcrumb",
          "attributes": [
            {
              "name": "separator",
              "default": "/",
              "description": "separator character",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "separator-class",
              "description": "class name of icon separator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-breadcrumb-item",
          "attributes": [
            {
              "name": "to",
              "description": "target route of the link, same as `to` of `vue-router`",
              "value": {
                "type": "string|object",
                "kind": "expression"
              }
            },
            {
              "name": "replace",
              "default": "false",
              "description": "if `true`, the navigation will not leave a history record",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-page-header",
          "description": "If path of the page is simple, it is recommended to use PageHeader instead of the Breadcrumb.",
          "doc-url": "https://element-plus.org/#/en-US/component/page-header",
          "attributes": [
            {
              "name": "title",
              "default": "Back",
              "description": "main title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "back",
              "description": "triggers when right side is clicked"
            }
          ],
          "slots": [
            {
              "name": "title",
              "description": "title content"
            },
            {
              "name": "content",
              "description": "content"
            }
          ]
        },
        {
          "name": "el-dropdown",
          "description": "Toggleable menu for displaying lists of links and actions.",
          "doc-url": "https://element-plus.org/#/en-US/component/dropdown",
          "attributes": [
            {
              "name": "type",
              "description": "menu button type, refer to `Button` Component, only works when `split-button` is true",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "description": "menu size, also works on the split button",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "max-height",
              "description": "the max height of menu",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "split-button",
              "default": "false",
              "description": "whether a button group is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "default": "bottom-end",
              "description": "placement of pop menu",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "default": "hover",
              "description": "how to trigger",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-click",
              "default": "true",
              "description": "whether to hide menu after clicking menu-item",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-timeout",
              "default": "250",
              "description": "Delay time before show a dropdown (only works when trigger is `hover`)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "hide-timeout",
              "default": "150",
              "description": "Delay time before hide a dropdown (only works when trigger is `hover`)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "tabindex",
              "default": "0",
              "description": "[tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Dropdown",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "if `split-button` is `true`, triggers when left button is clicked"
            },
            {
              "name": "command",
              "description": "triggers when a dropdown item is clicked"
            },
            {
              "name": "visible-change",
              "description": "triggers when the dropdown appears/disappears"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "content of Dropdown. Notice: Must be a valid html dom element (ex. `<span>, <button> etc.`) or `el-component`, to attach the trigger listener"
            },
            {
              "name": "dropdown",
              "description": "content of the Dropdown Menu, usually a `<el-dropdown-menu>` element"
            }
          ]
        },
        {
          "name": "el-dropdown-item",
          "doc-url": "https://element-plus.org/#/en-US/component/dropdown",
          "attributes": [
            {
              "name": "command",
              "description": "a command to be dispatched to Dropdown's `command` callback",
              "value": {
                "type": "string|number|object",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether the item is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "divided",
              "default": "false",
              "description": "whether a divider is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "icon class name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-dropdown-menu",
          "doc-url": "https://element-plus.org/#/en-US/component/dropdown"
        },
        {
          "name": "el-steps",
          "description": "Guide the user to complete tasks in accordance with the process. Its steps can be set according to the actual application scenario and the number of the steps can't be less than 2.",
          "doc-url": "https://element-plus.org/#/en-US/component/steps",
          "attributes": [
            {
              "name": "space",
              "description": "the spacing of each step, will be responsive if omitted. Supports percentage.",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "default": "horizontal",
              "description": "display direction",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "active",
              "default": "0",
              "description": "current activation step",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "process-status",
              "default": "process",
              "description": "status of current step",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "finish-status",
              "default": "finish",
              "description": "status of end step",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "align-center",
              "default": "false",
              "description": "center title and description",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "simple",
              "default": "false",
              "description": "whether to apply simple theme",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-step",
          "doc-url": "https://element-plus.org/#/en-US/component/steps",
          "attributes": [
            {
              "name": "title",
              "description": "step title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "description",
              "description": "step description",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "step icon's class name. Icons can be passed via named slot as well",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "status",
              "description": "current status. It will be automatically set by Steps if not configured.",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "icon",
              "description": "custom icon"
            },
            {
              "name": "title",
              "description": "step title"
            },
            {
              "name": "description",
              "description": "step description"
            }
          ]
        },
        {
          "name": "el-dialog",
          "description": "Informs users while preserving the current page state.",
          "doc-url": "https://element-plus.org/#/en-US/component/dialog",
          "attributes": [
            {
              "name": "model-value",
              "description": "visibility of Dialog",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "title of Dialog. Can also be passed with a named slot (see the following table)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "default": "50%",
              "description": "width of Dialog",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "fullscreen",
              "default": "false",
              "description": "whether the Dialog takes up full screen",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "top",
              "default": "15vh",
              "description": "value for `margin-top` of Dialog CSS",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "modal",
              "default": "true",
              "description": "whether a mask is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "append-to-body",
              "default": "false",
              "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "lock-scroll",
              "default": "true",
              "description": "whether scroll of body is disabled while Dialog is displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "custom-class",
              "description": "custom class names for Dialog",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "open-delay",
              "default": "0",
              "description": "Time(milliseconds) before open",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "close-delay",
              "default": "0",
              "description": "Time(milliseconds) before close",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "close-on-click-modal",
              "default": "true",
              "description": "whether the Dialog can be closed by clicking the mask",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "close-on-press-escape",
              "default": "true",
              "description": "whether the Dialog can be closed by pressing ESC",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "show-close",
              "default": "true",
              "description": "whether to show a close button",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "before-close",
              "description": "callback before Dialog closes, and it will prevent Dialog from closing",
              "value": {
                "type": "function(done)，done is used to close the Dialog",
                "kind": "expression"
              }
            },
            {
              "name": "center",
              "default": "false",
              "description": "whether to align the header and footer in center",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-close",
              "default": "false",
              "description": "Destroy elements in Dialog when closed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "open",
              "description": "triggers when the Dialog opens"
            },
            {
              "name": "opened",
              "description": "triggers when the Dialog opening animation ends"
            },
            {
              "name": "close",
              "description": "triggers when the Dialog closes"
            },
            {
              "name": "closed",
              "description": "triggers when the Dialog closing animation ends"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "content of Dialog"
            },
            {
              "name": "title",
              "description": "content of the Dialog title"
            },
            {
              "name": "footer",
              "description": "content of the Dialog footer"
            }
          ]
        },
        {
          "name": "el-tooltip",
          "description": "Display prompt information for mouse hover.",
          "doc-url": "https://element-plus.org/#/en-US/component/tooltip",
          "attributes": [
            {
              "name": "append-to-body",
              "default": "false",
              "description": "whether to append Dialog itself to body. A nested Dialog should have this attribute set to `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "effect",
              "default": "dark",
              "description": "Tooltip theme",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "display content, can be overridden by `slot#content`",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "default": "bottom",
              "description": "position of Tooltip",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "default": "false",
              "description": "visibility of Tooltip",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Tooltip is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "default": "0",
              "description": "offset of the Tooltip",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "transition",
              "default": "el-fade-in-linear",
              "description": "animation name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "visible-arrow",
              "default": "true",
              "description": "whether an arrow is displayed. For more information, check [Vue-popper](https://github.com/element-component/vue-popper) page",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-options",
              "default": "`{ boundariesElement: 'body', gpuAcceleration: false }`",
              "description": "[popper.js](https://popper.js.org/documentation.html) parameters",
              "value": {
                "type": "Object",
                "kind": "expression"
              }
            },
            {
              "name": "show-after",
              "default": "0",
              "description": "delay of appearance, in millisecond",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "hide-after",
              "default": "0",
              "description": "delay of disappear, in millisecond",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-close",
              "default": "0",
              "description": "timeout in milliseconds to hide tooltip",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "manual",
              "default": "false",
              "description": "whether to control Tooltip manually. `mouseenter` and `mouseleave` won't have effects if set to `true`",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for Tooltip's popper",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "enterable",
              "default": "true",
              "description": "whether the mouse can enter the tooltip",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "tabindex",
              "default": "0",
              "description": "[tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Tooltip",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-popover",
          "doc-url": "https://element-plus.org/#/en-US/component/popover",
          "attributes": [
            {
              "name": "trigger",
              "default": "click",
              "description": "how the popover is triggered",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "popover title",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content",
              "description": "popover content, can be replaced with a default `slot`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "width",
              "default": "Min width 150px",
              "description": "popover width",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "default": "bottom",
              "description": "popover placement",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "default": "false",
              "description": "whether Popover is disabled",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "visible / v-model:visible",
              "default": "false",
              "description": "whether popover is visible",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            },
            {
              "name": "offset",
              "default": "0",
              "description": "popover offset",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "transition",
              "default": "el-fade-in-linear",
              "description": "popover transition animation",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-arrow",
              "default": "true",
              "description": "whether a tooltip arrow is displayed or not. For more info, please refer to [Vue-popper](https://github.com/element-component/vue-popper)",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "popper-options",
              "default": "`{ boundariesElement: 'body', gpuAcceleration: false }`",
              "description": "parameters for [popper.js](https://popper.js.org/documentation.html)",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "popper-class",
              "description": "custom class name for popover",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "show-after",
              "default": "0",
              "description": "delay of appearance, in millisecond",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "hide-after",
              "default": "0",
              "description": "delay of disappear, in millisecond",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "auto-close",
              "default": "0",
              "description": "timeout in milliseconds to hide tooltip",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "tabindex",
              "default": "0",
              "description": "[tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Popover",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "show",
              "description": "triggers when popover shows"
            },
            {
              "name": "after-enter",
              "description": "triggers when the entering transition ends"
            },
            {
              "name": "hide",
              "description": "triggers when popover hides"
            },
            {
              "name": "after-leave",
              "description": "triggers when the leaving transition ends"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "text content of popover"
            },
            {
              "name": "reference",
              "description": "HTML element that triggers popover"
            }
          ]
        },
        {
          "name": "el-popconfirm",
          "description": "A simple confirmation dialog of an element click action",
          "doc-url": "https://element-plus.org/#/en-US/component/popconfirm",
          "attributes": [
            {
              "name": "title",
              "description": "Title",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "confirm-button-text",
              "description": "Confirm button text",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-button-text",
              "description": "Cancel button text",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "confirm-button-type",
              "default": "Primary",
              "description": "Confirm button type",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "cancel-button-type",
              "default": "Text",
              "description": "Cancel button type",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "default": "el-icon-question",
              "description": "Icon",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "icon-color",
              "default": "#f90",
              "description": "Icon color",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            },
            {
              "name": "hide-icon",
              "default": "false",
              "description": "is hide Icon",
              "value": {
                "type": "Boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "confirm",
              "description": "triggers when click confirm button"
            },
            {
              "name": "cancel",
              "description": "triggers when click cancel button"
            }
          ],
          "slots": [
            {
              "name": "reference",
              "description": "HTML element that triggers Popconfirm"
            }
          ]
        },
        {
          "name": "el-card",
          "description": "Integrate information in a card container.",
          "doc-url": "https://element-plus.org/#/en-US/component/card",
          "attributes": [
            {
              "name": "header",
              "description": "title of the card. Also accepts a DOM passed by `slot#header`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "body-style",
              "default": "{ padding: '20px' }",
              "description": "CSS style of body",
              "value": {
                "type": "object",
                "kind": "expression"
              }
            },
            {
              "name": "shadow",
              "default": "always",
              "description": "when to show card shadows",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-carousel",
          "description": "Loop a series of images or texts in a limited space",
          "doc-url": "https://element-plus.org/#/en-US/component/carousel",
          "attributes": [
            {
              "name": "height",
              "description": "height of the carousel",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "initial-index",
              "default": "0",
              "description": "index of the initially active slide (starting from 0)",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "trigger",
              "default": "hover",
              "description": "how indicators are triggered",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "autoplay",
              "default": "true",
              "description": "whether automatically loop the slides",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "interval",
              "default": "3000",
              "description": "interval of the auto loop, in milliseconds",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "indicator-position",
              "description": "position of the indicators",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "arrow",
              "default": "hover",
              "description": "when arrows are shown",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "type of the Carousel",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "loop",
              "default": "true",
              "description": "display the items in loop",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "default": "horizontal",
              "description": "display direction",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "pause-on-hover",
              "default": "true",
              "description": "pause autoplay when hover",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when the active slide switches"
            }
          ]
        },
        {
          "name": "el-carousel-item",
          "doc-url": "https://element-plus.org/#/en-US/component/carousel",
          "attributes": [
            {
              "name": "name",
              "description": "name of the item, can be used in `setActiveItem`",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "label",
              "description": "text content for the corresponding indicator",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-collapse",
          "description": "Use Collapse to store contents.",
          "doc-url": "https://element-plus.org/#/en-US/component/collapse",
          "attributes": [
            {
              "name": "model-value",
              "description": "currently active panel",
              "value": {
                "type": "string|array",
                "kind": "expression"
              }
            },
            {
              "name": "accordion",
              "default": "false",
              "description": "whether to activate accordion mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "triggers when active panels change"
            }
          ]
        },
        {
          "name": "el-collapse-item",
          "doc-url": "https://element-plus.org/#/en-US/component/collapse",
          "attributes": [
            {
              "name": "name",
              "description": "unique identification of the panel",
              "value": {
                "type": "string|number",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "title of the panel",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "disabled",
              "description": "disable the collapse item",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-timeline",
          "description": "Visually display timeline",
          "doc-url": "https://element-plus.org/#/en-US/component/timeline"
        },
        {
          "name": "el-timeline-item",
          "doc-url": "https://element-plus.org/#/en-US/component/timeline",
          "attributes": [
            {
              "name": "timestamp",
              "description": "timestamp content",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-timestamp",
              "default": "false",
              "description": "whether to show timestamp",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "placement",
              "default": "bottom",
              "description": "position of timestamp",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "type",
              "description": "node type",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "color",
              "description": "background color of node",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "normal",
              "description": "node size",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "icon",
              "description": "icon class name",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "Custom content for timeline item"
            },
            {
              "name": "dot",
              "description": "Custom defined node"
            }
          ]
        },
        {
          "name": "el-divider",
          "description": "The dividing line that separates the content",
          "doc-url": "https://element-plus.org/#/en-US/component/divider",
          "attributes": [
            {
              "name": "direction",
              "default": "horizontal",
              "description": "Set divider's direction",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "content-position",
              "default": "center",
              "description": "customize the content on the divider line",
              "value": {
                "type": "String",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-calendar",
          "description": "Display date.",
          "doc-url": "https://element-plus.org/#/en-US/component/calendar",
          "attributes": [
            {
              "name": "model-value",
              "description": "binding value",
              "value": {
                "type": "Date",
                "kind": "expression"
              }
            },
            {
              "name": "range",
              "description": "time range, including start time and end time. Start time must be start day of week, end time must be end day of week, the time span cannot exceed two months.",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            }
          ]
        },
        {
          "name": "el-image",
          "description": "Besides the native features of img, support lazy load, custom placeholder and load failure",
          "doc-url": "https://element-plus.org/#/en-US/component/image",
          "attributes": [
            {
              "name": "alt",
              "description": "Native alt",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fit",
              "description": "Indicate how the image should be resized to fit its container, same as [object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit)",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-click-modal",
              "default": "false",
              "description": "When enabling preview, use this flag to control whether clicking on backdrop can exit preview mode",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "lazy",
              "default": "false",
              "description": "Whether to use lazy load",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "preview-src-list",
              "description": "allow big image preview",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            },
            {
              "name": "referrer-policy",
              "description": "Native referrerPolicy",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "src",
              "description": "Image source, same as native",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "scroll-container",
              "default": "The nearest parent container whose overflow property is auto or scroll",
              "description": "The container to add scroll listener when using lazy load",
              "value": {
                "type": "string|HTMLElement",
                "kind": "expression"
              }
            },
            {
              "name": "z-index",
              "default": "2000",
              "description": "set image preview z-index",
              "value": {
                "type": "Number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "load",
              "description": "Same as native load"
            },
            {
              "name": "error",
              "description": "Same as native error"
            }
          ],
          "slots": [
            {
              "name": "placeholder",
              "description": "Triggers when image load"
            },
            {
              "name": "error",
              "description": "Triggers when image load failed"
            }
          ]
        },
        {
          "name": "el-image-viewer",
          "doc-url": "https://element-plus.org/#/en-US/component/image",
          "attributes": [
            {
              "name": "url-list",
              "default": "[]",
              "description": "Preview link list",
              "value": {
                "type": "Array",
                "kind": "expression"
              }
            },
            {
              "name": "z-index",
              "default": "2000",
              "description": "Preview backdrop z-index",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "initial-index",
              "default": "0",
              "description": "The initial preview image index, less than or equal to the length of `url-list`",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "infinite",
              "default": "true",
              "description": "Whether preview is infinite",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "hide-on-click-modal",
              "default": "false",
              "description": "Whether user can emit close event when clicking backdrop",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Emitted when clicking on `X` button or when `hide-on-click-modal` enabled clicking on backdrop"
            },
            {
              "name": "switch",
              "description": "When switching images"
            }
          ]
        },
        {
          "name": "el-backtop",
          "description": "A button to back to top",
          "doc-url": "https://element-plus.org/#/en-US/component/backtop",
          "attributes": [
            {
              "name": "target",
              "default": "",
              "description": "the target to trigger scroll",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "visibility-height",
              "default": "200",
              "description": "the button will not show until the scroll height reaches this value",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "right",
              "default": "40",
              "description": "right distance",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            },
            {
              "name": "bottom",
              "default": "40",
              "description": "bottom distance",
              "value": {
                "type": "number",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "triggers when click"
            }
          ]
        },
        {
          "name": "el-avatar",
          "description": "Avatars can be used to represent people or objects. It supports images, Icons, or characters",
          "doc-url": "https://element-plus.org/#/en-US/component/avatar",
          "attributes": [
            {
              "name": "icon",
              "default": "",
              "description": "set representation type to Icon, more info on Icon Component",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "large",
              "description": "set avatar size",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "shape",
              "default": "circle",
              "description": "set avatar shape",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "src",
              "default": "",
              "description": "the address of the image for an image avatar",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "srcSet",
              "default": "",
              "description": "A list of one or more strings separated by commas indicating a set of possible image sources for the user agent to use",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "alt",
              "default": "",
              "description": "This attribute defines an alternative text description of the image",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "fit",
              "default": "cover",
              "description": "set how the image fit its container for an image avatar",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "error",
              "description": "handler when img load error, return false to prevent default fallback behavior"
            }
          ]
        },
        {
          "name": "el-drawer",
          "description": "Sometimes, Dialog does not always satisfy our requirements, let's say you have a massive form, or you need space to display something like terms & conditions, Drawer has almost identical API with Dialog, but it introduces different user experience.",
          "doc-url": "https://element-plus.org/#/en-US/component/drawer",
          "attributes": [
            {
              "name": "append-to-body",
              "default": "false",
              "description": "Controls should Drawer be inserted to DocumentBody Element, nested Drawer must assign this param to **true**",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "before-close",
              "description": "If set, closing procedure will be halted",
              "value": {
                "type": "function",
                "kind": "expression"
              }
            },
            {
              "name": "close-on-press-escape",
              "default": "true",
              "description": "Indicates whether Drawer can be closed by pressing ESC",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "custom-class",
              "description": "Extra class names for Drawer",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "destroy-on-close",
              "default": "false",
              "description": "Indicates whether children should be destroyed after Drawer closed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "modal",
              "default": "true",
              "description": "Should show shadowing layer",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "direction",
              "default": "rtl",
              "description": "Drawer's opening direction",
              "value": {
                "type": "Direction",
                "kind": "expression"
              }
            },
            {
              "name": "show-close",
              "default": "true",
              "description": "Should show close button at the top right of Drawer",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "size",
              "default": "'30%'",
              "description": "Drawer's size, if Drawer is horizontal mode, it effects the width property, otherwise it effects the height property, when size is `number` type, it describes the size by unit of pixels; when size is `string` type, it should be used with `x%` notation, other wise it will be interpreted to pixel unit",
              "value": {
                "type": "number|string",
                "kind": "expression"
              }
            },
            {
              "name": "title",
              "description": "Drawer's title, can also be set by named slot, detailed descriptions can be found in the slot form",
              "value": {
                "type": "string",
                "kind": "expression"
              }
            },
            {
              "name": "model-value",
              "default": "false",
              "description": "Should Drawer be displayed",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            },
            {
              "name": "withHeader",
              "default": "true",
              "description": "Flag that controls the header section's existance, default to true, when withHeader set to false, both `title attribute` and `title slot` won't work",
              "value": {
                "type": "boolean",
                "kind": "expression"
              }
            }
          ],
          "events": [
            {
              "name": "open",
              "description": "Triggered before Drawer opening animation begins"
            },
            {
              "name": "opened",
              "description": "Triggered after Drawer opening animation ended"
            },
            {
              "name": "close",
              "description": "Triggered before Drawer closing animation begins"
            },
            {
              "name": "closed",
              "description": "Triggered after Drawer closing animation ended"
            }
          ],
          "slots": [
            {
              "name": "—",
              "description": "Drawer's Content"
            },
            {
              "name": "title",
              "description": "Drawer Title Section"
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "v-loading",
          "description": "Show animation while loading data.",
          "value": {
            "type": "boolean",
            "kind": "expression"
          }
        },
        {
          "name": "element-loading-text",
          "description": "loading text that displays under the spinner",
          "value": {
            "type": "string",
            "kind": "expression"
          }
        },
        {
          "name": "element-loading-spinner",
          "description": "class name of the custom spinner",
          "value": {
            "type": "string",
            "kind": "expression"
          }
        },
        {
          "name": "element-loading-background",
          "description": "background color of the mask",
          "value": {
            "type": "string",
            "kind": "expression"
          }
        },
        {
          "name": "v-infinite-scroll",
          "description": "Load more data while reach bottom of the page",
          "value": {
            "type": "function",
            "kind": "expression"
          }
        },
        {
          "name": "infinite-scroll-disabled",
          "default": "false",
          "description": "is disabled",
          "value": {
            "type": "boolean",
            "kind": "expression"
          }
        },
        {
          "name": "infinite-scroll-delay",
          "default": "200",
          "description": "throttle delay (ms)",
          "value": {
            "type": "number",
            "kind": "expression"
          }
        },
        {
          "name": "infinite-scroll-distance",
          "default": "0",
          "description": "trigger distance (px)",
          "value": {
            "type": "number",
            "kind": "expression"
          }
        },
        {
          "name": "infinite-scroll-immediate",
          "default": "true",
          "description": "Whether to execute the loading method immediately, in case the content cannot be filled up in the initial state.",
          "value": {
            "type": "boolean",
            "kind": "expression"
          }
        }
      ]
    }
  }
}
